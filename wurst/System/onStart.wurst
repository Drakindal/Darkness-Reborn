package onStart
import ClosureTimers
import WaveSetup
import DialogBox
import MyBuildingsIds
import RespawnCreeps
import MyUnitIds
import HeroRespawnTimer
import CodeDialog
import Global_Variables
import TeleportToMobs
import GameEnd
public unit elementalSoul
real facing = 270
real facingUp = 90

init

    mapSetup()

    doAfter(0.01) -> 
        for i = 0 to 9
            gg_cam_CameraHeroPick.apply(true, players[i], 0.3)
            CreateFogModifierRectBJ( true, players[i], FOG_OF_WAR_VISIBLE, GetPlayableMapRect() )

public function heroRespawn(unit u)
    CreateTrigger()..registerUnitEvent(u, EVENT_UNIT_DEATH)..addAction() ->
        heroRespawnTimer(GetDyingUnit())
        let i = GetOwningPlayer(GetTriggerUnit()).getId()
        if GetOwningPlayer(GetDyingUnit()) == Player(i)
            doAfter(10) -> 
                playerHero[i].revive(gg_rct_Base.getCenter(), true)

public function questSetup()
    let commands = CreateQuest()
    let discord = CreateQuest()
    let recipe = CreateQuest()
    
    QuestSetDiscovered(commands, true)
    QuestSetIconPath(commands, "ReplaceableTextures\\CommandButtons\\BTNSpy.blp")
    QuestSetTitle(commands, "Commands")
    QuestSetDescription(commands, "-cam 500-4000 : Adjusts the camera view \n-clean : Cleans items in 10 seconds\n-stopclean : Stops cleaning process")

    QuestSetDiscovered(discord, true)
    QuestSetIconPath(discord, "ReplaceableTextures\\Icons\\discordIcon.blp")
    QuestSetTitle(discord, "Discord")
    QuestSetDescription(discord, "Discord invite: https://discord.gg/pnrhrHS")

    QuestSetDiscovered(recipe, true)
    QuestSetRequired(recipe, false)
    QuestSetIconPath(recipe, "ReplaceableTextures\\CommandButtons\\BTNAdvStruct.blp")
    QuestSetTitle(recipe, "Recipe for non-store items")
    QuestSetDescription(recipe, "Khadgar's Pendant of Health + Periapt of Vitality = Jewelry of Life\n"
    +"Pendant of Mana + Pendant of Energy = jewelry of Mana\n"
    +"Jewelry of Life + Periapt of Vitality + Ring of Regeneration = Guinevere's Ring\n"
    +"Jewelry of Mana + Pendant of Mana = Lancelot's Ring\n"
    +"Lancelot's Ring + Guinevere's Ring + Pendant of Energy = Arkenstone Fragment")

function onBuyHero(unit u)
    CreateTrigger()..registerUnitEvent(u, EVENT_UNIT_SELL)..addAction() ->
        let soldUnit = GetSoldUnit()
        for i = 0 to 9
            if GetOwningPlayer(soldUnit) == players[i]
                playerHero[i] = soldUnit
                SetPlayerTechMaxAllowedSwap(TINKERBUILDING_114, 1, soldUnit.getOwner())
                SetPlayerTechMaxAllowedSwap(TINKERBUILDING_111, 1, soldUnit.getOwner())
                SetPlayerTechMaxAllowedSwap(TINKERBUILDING_112, 1, soldUnit.getOwner())
                SetPlayerTechMaxAllowedSwap(TINKERBUILDING_95, 1, soldUnit.getOwner())
                SetPlayerTechMaxAllowedSwap(TINKERBUILDING_103, 1, soldUnit.getOwner())
                gg_cam_CameraHeroPicked.apply(true, players[i], 0.5)
                heroRespawn(playerHero[i])
                playerHero[i].setPos(gg_rct_Base.getCenter())
                players[i].setState(PLAYER_STATE_RESOURCE_FOOD_CAP, 0)
                GetBuyingUnit().remove()

function createSetup()
    let p = Player(10)

    SetPlayerState(Player(11), PLAYER_STATE_GIVES_BOUNTY, 1)
    SetPlayerState(Player(12), PLAYER_STATE_GIVES_BOUNTY, 1)
    SetPlayerState(Player(13), PLAYER_STATE_GIVES_BOUNTY, 1)

    for i = 0 to 9
        createUnit(players[i], HERO_PICKER, gg_rct_HeroPicker.getCenter())
        players[i]..addState(PLAYER_STATE_RESOURCE_FOOD_CAP, 5)..addState(PLAYER_STATE_RESOURCE_GOLD, 800)
        
    var posX = GetRectCenterX(gg_rct_HeroPicker) - 384.
    var posY = GetRectCenterY(gg_rct_HeroPicker)

    let tavern1 = CreateUnit(Player(10), BUILDING_TAVERN_STR, posX, posY, bj_UNIT_FACING)
    onBuyHero(tavern1)
    posX = GetRectCenterX(gg_rct_HeroPicker)
    let tavern2 = CreateUnit(Player(10), BUILDING_TAVERN_AGI, posX, posY, bj_UNIT_FACING)
    onBuyHero(tavern2)
    posX = GetRectCenterX(gg_rct_HeroPicker) + 384.
    let tavern3 = CreateUnit(Player(10), BUILDING_TAVERN_INT, posX, posY, bj_UNIT_FACING)
    onBuyHero(tavern3)

    posX = GetRectCenterX(gg_rct_ShopLeft) + 150
    var posMax = GetRectMaxY(gg_rct_ShopLeft)
    var posMin = GetRectMinY(gg_rct_ShopLeft)
    var dividend = (posMax - posMin) / 4
    posY = posMin + 100

    CreateUnit(p, BUILDING_4, posX, posY, 270.000) // Basic Items 4
    posY = posY + dividend
    CreateUnit(p, BUILDING_3, posX, posY, 270.000) // Basic Items 3
    posY = posY + dividend
    CreateUnit(p, BUILDING_2, posX, posY, 270.000) // Basic Items 2
    posY = posY + dividend
    CreateUnit(p, BUILDING_1, posX, posY, 270.000) // Basic Items 1

    posX = GetRectCenterX(gg_rct_ShopRight) - 150
    posMax = GetRectMaxY(gg_rct_ShopRight)
    posMin = GetRectMinY(gg_rct_ShopRight)
    dividend = (posMax - posMin) / 4
    posY = posMin + 100

    let endGamebosses = CreateUnit(p, BUILDING_17, posX, posY, 270.000) // End-game bosses
    posY = posY + dividend
    let eliteGrounds = CreateUnit(p, BUILDING_16, posX, posY, 270.000) // Elite hunting grounds
    posY = posY + dividend
    let intermediateGrounds = CreateUnit(p, BUILDING_15, posX, posY, 270.000) // Intermediate hunting grounds
    posY = posY + dividend
    let easyGrounds = CreateUnit(p, BUILDING_14, posX, posY, 270.000) // Easy hunting grounds

    posX = GetRectCenterX(gg_rct_ShopLeft) - 150
    posMax = GetRectMaxY(gg_rct_ShopLeft)
    posMin = GetRectMinY(gg_rct_ShopLeft)
    dividend = (posMax - posMin) / 4
    posY = posMin + 100

    CreateUnit(p, BUILDING_8, posX, posY, 270.000) // Recipe shop 4
    posY = posY + dividend
    CreateUnit(p, BUILDING_7, posX, posY, 270.000) // Recipe Shop 3
    posY = posY + dividend
    CreateUnit(p, BUILDING_6, posX, posY, 270.000) // Recipe Shop 2
    posY = posY + dividend
    CreateUnit(p, BUILDING_5, posX, posY, 270.000) // Recipe Shop 1

    posX = GetRectCenterX(gg_rct_ShopRight) + 150
    posMax = GetRectMaxY(gg_rct_ShopRight)
    posMin = GetRectMinY(gg_rct_ShopRight)
    dividend = (posMax - posMin) / 4
    posY = posMin + 100

    CreateUnit(p, BUILDING_13, posX, posY, 270.000) // End Game Items
    posY = posY + dividend
    CreateUnit(p, BUILDING_12, posX, posY, 270.000) // Decent Items
    posY = posY + dividend
    CreateUnit(p, BUILDING_11, posX, posY, 270.000) // Late Game Items
    posY = posY + dividend
    CreateUnit(p, BUILDING_10, posX, posY, 270.000) // Late Game Items

    teleportToMobs(easyGrounds, intermediateGrounds, eliteGrounds, endGamebosses)

function mapSetup()
    elementalSoul = createUnit(Player(10), ELEMENTAL_SOUL, gg_rct_AllSpawnMove2.getCenter(), facing.asAngleDegrees()) // Elemental Soul
    onDefeat(elementalSoul)

    let posX = GetRectCenterX(gg_rct_Base)
    let posY = GetRectCenterY(gg_rct_Base) + 200

    CreateUnit(Player(10), BUILDING_0, posX, posY, 270.000) // Fountain of Healing (at base)


    doAfter(0.5) -> 

        let dBox = new DialogBox("Choose difficulty")

        dBox.addButton("Normal") ->
            difficulty = "normal"
            preWaveSetup()
            questSetup()
            createSetup()
            leftSideCreepsSetup()
            eliteSideCreepsSetup()
            bossCreepSetup()
            overdryaSetup()
            codeDialog()
            destroy dBox
        
        dBox.display(players[0], true)