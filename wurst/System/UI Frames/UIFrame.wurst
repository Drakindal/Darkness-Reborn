package UIFrame
import public ClosureFrames
import ClosureTimers
import ClosureKeyPresses
import Icons
import QuestList
import HashList

public framehandle array ui_Btn
framehandle helpBtni
framehandle tooltipText
framehandle tooltipBackdrop
public framehandle array ui_QuestEntries
public int questCount = 0

//ui_Btn[1] - its the button itself
//ui_Btn[100] - its the backdrop of the frame
//ui_Btn[200] - its the log
//ui_Btn[300] - its the mini-name
init



    doAfter(1.) ->
        helpBtni = createFrame("IconButtonTemplate")
            ..setAbsPoint(FRAMEPOINT_BOTTOMLEFT, 0, 0.17)
            ..setScale(0.7)
            ..onClick(() -> toggleQuestPanel())
        

        ui_Btn[100] = BlzCreateFrameByType("BACKDROP", "BackdropButton01", helpBtni, "", 0)
        ui_Btn[100].setAllPoints(helpBtni)
        ui_Btn[100].setTexture(Icons.bTNSelectHeroOn, 0, true)
        ui_Btn[200] = BlzCreateFrame("QuestButtonBaseTemplate",helpBtni,0,0)
        ui_Btn[200].setAbsPoint(FRAMEPOINT_BOTTOMLEFT, 0.0, 0.21)
        ui_Btn[200].setSize(0.35, 0.4)
        ui_Btn[200].setVisible(false)
        ui_Btn[300] = BlzCreateFrameByType("TEXT","name",ui_Btn[200],"",0)
        ui_Btn[300].setAbsPoint(FRAMEPOINT_CENTER, 0.11,0.47)
        ui_Btn[300].setSize(0.2, 0.1)
        ui_Btn[300].setText("|c00ff0000[F3]|r |c00ff8800Quests|r")
        ui_Btn[300].setVisible(true)
        ui_Btn[300].setScale(0.6)
        ui_Btn[300].setTextAlignment(TEXT_JUSTIFY_CENTER, TEXT_JUSTIFY_CENTER)

        tooltipText = BlzCreateFrameByType("TEXT", "tooltip", helpBtni, "", 0)
        tooltipText.setAbsPoint(FRAMEPOINT_BOTTOMLEFT, 0, 0.19)
        let text = "|cffffcc00[F3]|r |cffffffccOpen Quest Log|r"
        tooltipText.setText(text)
        let stripped = text.replace("|c", "").replace("|r", "")
        let charCount = StringLength(stripped)
        let width = charCount * 0.0035 //
        let height = 0.02
        tooltipText.setSize(width, height)
        tooltipText.setTextAlignment(TEXT_JUSTIFY_LEFT, TEXT_JUSTIFY_TOP)
        tooltipText.setVisible(false)

        tooltipBackdrop = BlzCreateFrame("TooltipBackdropTemplate", tooltipText, 0, 0)
        tooltipBackdrop.setSize(width + 0.02, height + 0.02)
        tooltipBackdrop.setAbsPoint(FRAMEPOINT_BOTTOMLEFT, 0, 0.19)
        tooltipBackdrop.setVisible(false)

        let hoverTrig = CreateTrigger()
        BlzTriggerRegisterFrameEvent(hoverTrig, helpBtni, FRAMEEVENT_MOUSE_ENTER)
        hoverTrig.addAction(() -> begin
            if GetLocalPlayer() == GetTriggerPlayer()
                tooltipText.setVisible(true)
                tooltipBackdrop.setVisible(true)
        end)

        let leaveTrig = CreateTrigger()
        BlzTriggerRegisterFrameEvent(leaveTrig, helpBtni, FRAMEEVENT_MOUSE_LEAVE)
        leaveTrig.addAction(() -> begin
            if GetLocalPlayer() == GetTriggerPlayer()
                tooltipText.setVisible(false)
                tooltipBackdrop.setVisible(false)
        end)
        onKeyPress(OSKEY_F3) -> 
            toggleQuestPanel()


function toggleQuestPanel()
    if GetLocalPlayer() != GetTriggerPlayer()
        return

    if BlzFrameIsVisible(ui_Btn[200])
        ui_Btn[200].setVisible(false)
        tooltipText.setText("|cffffcc00[F3]|r |cffffffccOpen Quest Log|r")
    else
        // Update the dynamic quest list each time we open
        ui_Btn[200].setVisible(true)
        tooltipText.setText("|cffffcc00[F3]|r |cffffffccClose Quest Log|r")
        updateQuestPanel()

    helpBtni.unfocus()


function updateQuestPanel()
    let localPlayer = GetLocalPlayer()
    let triggerPlayer = GetTriggerPlayer()

    if localPlayer != triggerPlayer
        DisplayTimedTextToPlayer(localPlayer, 0, 0, 5., "DEBUG: Not local player, skipping update")
        return


    // Create main panel if it doesn't exist
    if ui_Btn[200] == null
        ui_Btn[200] = BlzCreateFrameByType("FRAME", "questPanel", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
        ui_Btn[200].setSize(0.35, 0.5)
        ui_Btn[200].setAbsPoint(FRAMEPOINT_TOPLEFT, 0.02, 0.95)
        ui_Btn[200].setVisible(true)
        DisplayTimedTextToPlayer(localPlayer, 0, 0, 5., "DEBUG: Created main panel")

    // Hide previous quest entries
    for int i = 400 to 499
        if ui_Btn[i] != null
            ui_Btn[i].setVisible(false)

    let questList = questListsOwners.get(localPlayer)

    let quests = questList.getQuestHashList()
    let count = quests.size()


    // Show placeholder if no quests
    if count == 0
        let btnIndex = 400
        if ui_Btn[btnIndex] == null
            ui_Btn[btnIndex] = BlzCreateFrameByType("TEXT", "questEntryEmpty", ui_Btn[200], "", 0)
            ui_Btn[btnIndex].setSize(0.3, 0.05)
            ui_Btn[btnIndex].setScale(0.6)
            ui_Btn[btnIndex].setTextAlignment(TEXT_JUSTIFY_LEFT, TEXT_JUSTIFY_CENTER)
            ui_Btn[btnIndex].setAbsPoint(FRAMEPOINT_TOPLEFT, 0.02, 0.45)
        ui_Btn[btnIndex].setText("|cffffcc00No quests available|r")
        ui_Btn[btnIndex].setVisible(true)
        return

    // Display dynamic quest entries
    for int idx = 0 to count - 1
        let questText = quests.get(idx)
        let btnIndex = 400 + idx

        if ui_Btn[btnIndex] == null
            ui_Btn[btnIndex] = BlzCreateFrameByType("TEXT", "questEntry" + I2S(idx), ui_Btn[200], "", 0)
            ui_Btn[btnIndex].setSize(0.3, 0.03)
            ui_Btn[btnIndex].setScale(0.6)
            ui_Btn[btnIndex].setTextAlignment(TEXT_JUSTIFY_LEFT, TEXT_JUSTIFY_CENTER)
            ui_Btn[btnIndex].setAbsPoint(FRAMEPOINT_TOPLEFT, 0.02, 0.45 - (idx * 0.03))

        ui_Btn[btnIndex].setText(questText)
        ui_Btn[btnIndex].setVisible(true)






