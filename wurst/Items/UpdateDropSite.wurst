package UpdateDropSite

import ClosureEvents
import HashMap
import HashSet
import MyItemIds
import Global_Variables

public let itemDropsInTavern = new HashMap<int,int> //Item ID linked to amount of item
public let itemDropsEnumerator = new HashSet<int> //List of dropped Item Ids to enumerate over
var page = 0

public function updateItemPool()
    itemDropsEnumerator.forEach() (integer t) ->
        RemoveItemFromStock(dropSite, t)
    if(page > 0)
        AddItemToStock(dropSite, PREVPAGE, 1, 1)
    if(itemDropsEnumerator.size() > 8 + page * 8)
        AddItemToStock(dropSite, NEXTPAGE, 1, 1)
    for int i = 0 to 8
        let temp = itemDropsEnumerator.get(page * 8 + i)
        let stock = itemDropsInTavern.get(temp)
        BlzSetItemIntegerField(CreateItem(temp,0,0)..remove(), ConvertItemIntegerField('ista'), stock)
        if(stock > 0)
            AddItemToStock(dropSite, temp, stock, stock)

public function updateDropSite()
    EventListener.add(EVENT_PLAYER_UNIT_SELL_ITEM) ->
        if EventData.getSellingUnit() == dropSite
            let ite = EventData.getSoldItem()
            let iteId = ite.getTypeId()
            if(iteId == NEXTPAGE)
                page++
                RemoveItemFromStock(dropSite, NEXTPAGE)
                ite.remove()
            else if (iteId == PREVPAGE)
                page--
                RemoveItemFromStock(dropSite, PREVPAGE)
                ite.remove()
            else if itemDropsEnumerator.has(iteId)
                itemDropsInTavern.put(iteId, itemDropsInTavern.get(iteId) - 1)
            updateItemPool()