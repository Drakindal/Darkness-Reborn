package ItemPickups
import ClosureEvents
import MyItemIds
import HashSet
import ArmorWeaponTypes
import UnitStats

public let itemPickedup = new HashSet<item>

init
    EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
        let u = EventData.getTriggerUnit()
        itemPickedup.add(EventData.getManipulatedItem())

        let defenseType = u.getField(UNIT_IF_DEFENSE_TYPE)

        if u.hasItemById(ITEM_DRAGON_WINGS) and u.getFieldWeapon(UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE, 0) != WEAPON_TYPE_BLOOD
            u.setFieldWeapon(UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE, 0, WEAPON_TYPE_BLOOD)
        else if u.hasItemById(ITEM_HOLY_ARMOR) and defenseType != ARMOR_TYPE_HERO and defenseType != ARMOR_TYPE_HOLY
            u.setField(UNIT_IF_DEFENSE_TYPE, ARMOR_TYPE_HERO)
        else if u.hasItemById(ITEM_CHAOS) and defenseType == ARMOR_TYPE_HERO and defenseType != ARMOR_TYPE_HOLY
            u.setField(UNIT_IF_DEFENSE_TYPE, ARMOR_TYPE_HOLY)

        println("Picked up item = {0}".format(EventData.getManipulatedItem().getName()))
        println("Pen = {0}, Res = {1}".format(u.getStats().getPen(penType.Physical).toString(2), u.getStats().getRes(resType.Magical).toString(2)))
        u.getStats().updateStats()
        println("NPen = {0}, NRes = {1}".format(u.getStats().getPen(penType.Physical).toString(2), u.getStats().getRes(resType.Magical).toString(2)))
        
    EventListener.add(EVENT_PLAYER_UNIT_DROP_ITEM) -> 
        let u = EventData.getTriggerUnit()

        println("Dropped item = {0}".format(EventData.getManipulatedItem().getName()))
        u.getStats().updateStats()