package ItemDrops
import MyUnitIds
import MyItemIds
import LinkedList
import HashMap

let dropListHash = dropListEnumerate()


function rightCreepEnumerate() returns HashMap<int,DropList>
    let hash = new HashMap<int,DropList>
    let dropList = new LinkedList<LinkedList<int>>
    let itemDrops = new LinkedList<int>
    let dropChance = new LinkedList<int>
    let cutOff = new LinkedList<int>
    let cutOffLinked = new LinkedList<LinkedList<int>>
    // Nerubian Queen
    dropChance.add(25)
    itemDrops.add(ITEM_329, ITEM_330, ITEM_327)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[1], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Hydralisk
    dropChance.add(25)
    itemDrops.add(ITEM_332, ITEM_330, ITEM_327, ITEM_331)
    dropList.add(new LinkedList<int>(itemDrops))
    itemDrops.clear()
    dropChance.add(10)
    itemDrops.add(ITEM_341)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[2], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // furbolg ursa warrior
    dropChance.add(25)
    cutOff.add(4)
    cutOff.add(3)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_334, ITEM_336, ITEM_335, ITEM_337, ITEM_331, ITEM_332, ITEM_333, ITEM_328)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[3], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Flesh golem
    dropChance.add(25)
    cutOff.add(4)
    cutOff.add(6)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_334, ITEM_336, ITEM_335, ITEM_337, ITEM_331, ITEM_332, ITEM_333, ITEM_330, ITEM_329, ITEM_327, ITEM_328)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[4], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Doom guard
    dropChance.add(25)
    cutOff.add(4)
    cutOff.add(3)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_334, ITEM_336, ITEM_335, ITEM_337, ITEM_338, ITEM_340, ITEM_339, ITEM_328)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[5], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Frosty
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_328, ITEM_328, ITEM_328, ITEM_352)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[8], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Snappy
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_328, ITEM_328, ITEM_276, ITEM_355)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[9], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // IceRev
    dropChance.add(100)
    cutOff.add(3)
    cutOff.add(3)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_349, ITEM_350, ITEM_351, ITEM_343, ITEM_344, ITEM_345)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(ELITE_CREEP[10], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()

    destroy itemDrops
    destroy dropList
    destroy cutOff
    destroy cutOffLinked
    destroy dropChance
    return hash

function leftCreepEnumerate() returns HashMap<int,DropList>
    let hash = new HashMap<int,DropList>
    let dropList = new LinkedList<LinkedList<int>>
    let itemDrops = new LinkedList<int>
    let dropChance = new LinkedList<int>
    // Spider
    dropChance.add(20)
    itemDrops.add(ITEM_277, ITEM_278, ITEM_279)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[1], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Mud Golem
    dropChance.add(20)
    itemDrops.add(ITEM_281, ITEM_280, ITEM_282)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[2], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tiderunner
    dropChance.add(20)
    itemDrops.add(ITEM_278, ITEM_279, ITEM_281, ITEM_282, ITEM_283, ITEM_285)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[3], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Wolf
    dropChance.add(20)
    itemDrops.add(ITEM_283, ITEM_284, ITEM_285)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[4], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Crab
    dropChance.add(20)
    itemDrops.add(ITEM_288, ITEM_287, ITEM_286)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[5], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Trickster
    dropChance.add(20)
    itemDrops.add(ITEM_289, ITEM_290, ITEM_291)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[6], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Spitting
    dropChance.add(20)
    itemDrops.add(ITEM_292, ITEM_293, ITEM_294)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[7], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Rock golem
    dropChance.add(20)
    itemDrops.add(ITEM_295, ITEM_296, ITEM_297)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[8], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Murgul
    dropChance.add(20)
    itemDrops.add(ITEM_298, ITEM_299)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[9], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Furbolg
    dropChance.add(20)
    itemDrops.add(ITEM_300, ITEM_301)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[10], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Ghost
    dropChance.add(20)
    itemDrops.add(ITEM_302, ITEM_303)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[11], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Deathbringer
    dropChance.add(20)
    itemDrops.add(ITEM_304, ITEM_305)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[12], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Broodmother
    dropChance.add(20)
    itemDrops.add(ITEM_306, ITEM_307)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[13], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Granite Golem
    dropChance.add(20)
    itemDrops.add(ITEM_306, ITEM_307)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[14], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Turtle
    dropChance.add(20)
    itemDrops.add(ITEM_310, ITEM_311)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[15], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Polar Bear
    dropChance.add(20)
    itemDrops.add(ITEM_312, ITEM_313)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[16], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Storm Wyrm
    dropChance.add(20)
    itemDrops.add(ITEM_314, ITEM_315)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[17], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Skeleton
    dropChance.add(20)
    itemDrops.add(ITEM_316, ITEM_317)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[18], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Troll
    dropChance.add(20)
    itemDrops.add(ITEM_318, ITEM_319)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[19], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Mammoth
    dropChance.add(20)
    itemDrops.add(ITEM_320, ITEM_321)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[20], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Ravager
    dropChance.add(20)
    itemDrops.add(ITEM_322, ITEM_323)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[21], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Slime
    dropChance.add(20)
    itemDrops.add(ITEM_324, ITEM_325)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[22], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tormentor
    dropChance.add(20)
    itemDrops.add(ITEM_326, ITEM_195)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[23], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Voidwalker
    dropChance.add(20)
    itemDrops.add(ITEM_327, ITEM_328)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(LEFT_CREEP[24], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()

    destroy itemDrops
    destroy dropList
    destroy dropChance
    return hash

function dragonBossCreepEnumerate() returns HashMap<int,DropList>
    let hash = new HashMap<int,DropList>
    let dropList = new LinkedList<LinkedList<int>>
    let itemDrops = new LinkedList<int>
    let dropChance = new LinkedList<int>
    let cutOff = new LinkedList<int>
    let cutOffLinked = new LinkedList<LinkedList<int>>
    // Dragon I
    dropChance.add(100)
    cutOff.add(2)
    cutOff.add(2)
    cutOff.add(11)
    cutOff.add(11)
    cutOff.add(11)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_356,ITEM_357,ITEM_356,ITEM_357)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,'tdex','tstr','tint','tdx2','tin2','tst2','tpow')
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,'tdex','tstr','tint','tdx2','tin2','tst2','tpow')
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,'tdex','tstr','tint','tdx2','tin2','tst2','tpow')
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[1], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon II
    dropChance.add(100)
    cutOff.add(2)
    cutOff.add(11)
    cutOff.add(11)
    cutOff.add(11)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_357,ITEM_358)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,'tdex','tstr','tint','tdx2','tin2','tst2','tpow')
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,'tdex','tstr','tint','tdx2','tin2','tst2','tpow')
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,'tdex','tstr','tint','tdx2','tin2','tst2','tpow')
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[2], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon III
    dropChance.add(100)
    cutOff.add(2)
    cutOff.add(2)
    cutOff.add(8)
    cutOff.add(8)
    cutOff.add(8)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_357,ITEM_358)
    itemDrops.add(ITEM_359,ITEM_358)
    itemDrops.add('tdx2','tin2','tst2',ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add('tdx2','tin2','tst2',ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add('tdx2','tin2','tst2',ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[3], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon IV
    dropChance.add(100)
    cutOff.add(2)
    cutOff.add(2)
    cutOff.add(8)
    cutOff.add(8)
    cutOff.add(8)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_359,ITEM_358)
    itemDrops.add(ITEM_359,ITEM_358)
    itemDrops.add('tdx2','tin2','tst2',ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add('tdx2','tin2','tst2',ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add('tdx2','tin2','tst2',ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[4], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon V
    dropChance.add(100)
    cutOff.add(2)
    cutOff.add(2)
    cutOff.add(5)
    cutOff.add(5)
    cutOff.add(5)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_359,ITEM_358)
    itemDrops.add(ITEM_359,ITEM_358)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[5], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon VI
    dropChance.add(100)
    cutOff.add(4)
    cutOff.add(4)
    cutOff.add(5)
    cutOff.add(5)
    cutOff.add(5)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_359,ITEM_358,ITEM_357,ITEM_356)
    itemDrops.add(ITEM_359,ITEM_358,ITEM_357,ITEM_356)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[6], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon VII
    dropChance.add(100)
    cutOff.add(4)
    cutOff.add(4)
    cutOff.add(5)
    cutOff.add(5)
    cutOff.add(5)
    cutOff.add(2)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_359,ITEM_358,ITEM_357,ITEM_356)
    itemDrops.add(ITEM_359,ITEM_358,ITEM_357,ITEM_356)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_349, ITEM_350)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[7], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Dragon VIII
    dropChance.add(100)
    cutOff.add(4)
    cutOff.add(4)
    cutOff.add(5)
    cutOff.add(5)
    cutOff.add(5)
    cutOff.add(1)
    cutOff.add(5)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_359,ITEM_358,ITEM_357,ITEM_356)
    itemDrops.add(ITEM_359,ITEM_358,ITEM_357,ITEM_356)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    itemDrops.add(ITEM_351)
    itemDrops.add(ITEM_342,ITEM_343,ITEM_344,ITEM_345,ITEM_346)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[8], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()

    destroy itemDrops
    destroy dropList
    destroy cutOff
    destroy cutOffLinked
    destroy dropChance
    return hash

function restBossCreepEnumerate() returns HashMap<int,DropList>
    let hash = new HashMap<int,DropList>
    let dropList = new LinkedList<LinkedList<int>>
    let itemDrops = new LinkedList<int>
    let dropChance = new LinkedList<int>
    let cutOff = new LinkedList<int>
    let cutOffLinked = new LinkedList<LinkedList<int>>
    // Water 1
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_117)
    itemDrops.add(ITEM_121)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[9], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Water 2
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_708)
    itemDrops.add(ITEM_121)
    itemDrops.add(ITEM_350)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[10], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Water 3
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_351)
    itemDrops.add(ITEM_121)
    itemDrops.add(ITEM_363)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[11], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Water 4
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_348)
    itemDrops.add(ITEM_364)
    itemDrops.add(ITEM_121)
    itemDrops.add(ITEM_121)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[12], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Vampire 1
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(6)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_328)
    itemDrops.add(ITEM_328)
    itemDrops.add(ITEM_328)
    itemDrops.add(ITEM_118)
    itemDrops.add(ITEM_353)
    itemDrops.add(ITEM_343,ITEM_344,ITEM_345,ITEM_346,ITEM_347,ITEM_348)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[13], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Vampire 2
    dropChance.add(100)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(1)
    cutOff.add(6)
    cutOffLinked.add(new LinkedList<int>(cutOff))
    itemDrops.add(ITEM_328)
    itemDrops.add(ITEM_328)
    itemDrops.add(ITEM_328)
    itemDrops.add(ITEM_354)
    itemDrops.add(ITEM_110)
    itemDrops.add(ITEM_343,ITEM_344,ITEM_345,ITEM_346,ITEM_347,ITEM_348)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[14], new DropList(dropList, cutOffLinked, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    cutOff.clear()
    cutOffLinked.clear()
    // Tower 1
    dropChance.add(100)
    itemDrops.add(ITEM_365)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[15], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 2
    dropChance.add(100)
    itemDrops.add(ITEM_366)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[16], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 3
    dropChance.add(100)
    itemDrops.add(ITEM_367)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[17], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 4
    dropChance.add(100)
    itemDrops.add(ITEM_368)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[18], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 5
    dropChance.add(100)
    itemDrops.add(ITEM_369)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[19], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 5
    dropChance.add(100)
    itemDrops.add(ITEM_370)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[20], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 5
    dropChance.add(100)
    itemDrops.add(ITEM_354)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[21], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()
    // Tower 5
    dropChance.add(100)
    itemDrops.add(ITEM_371)
    dropList.add(new LinkedList<int>(itemDrops))
    hash.put(BOSS_CREEP[22], new DropList(dropList, dropChance))
    itemDrops.clear()
    dropList.clear()
    dropChance.clear()

    destroy itemDrops
    destroy dropList
    destroy cutOff
    destroy cutOffLinked
    destroy dropChance
    return hash

function dropListEnumerate() returns HashMap<int,DropList>
    let hash = new HashMap<int,DropList>

    let hash2 = leftCreepEnumerate()
    for int i = 0 to hash2.size() - 1
        hash.put(LEFT_CREEP[i+1], hash2.get(LEFT_CREEP[i+1]))
    destroy hash2

    let hash3 = rightCreepEnumerate()
    for int i = 0 to hash3.size() - 1
        if i < 4
            hash.put(ELITE_CREEP[i+1], hash3.get(ELITE_CREEP[i+1]))
        else
            hash.put(ELITE_CREEP[i+3], hash3.get(ELITE_CREEP[i+3]))
    destroy hash3

    let hash4 = dragonBossCreepEnumerate()
    for int i = 0 to hash4.size() - 1
        hash.put(BOSS_CREEP[i+1], hash4.get(BOSS_CREEP[i+1]))
    destroy hash4

    let hash5 = restBossCreepEnumerate()
    for int i = 0 to hash5.size() - 1
        hash.put(LEFT_CREEP[i+9], hash5.get(LEFT_CREEP[i+9]))
    destroy hash5

    return hash

class DropList
    // dropPool.size() = amount of drop pools, dropPool.get(i).size = amount in i drop pool
    LinkedList<LinkedList<int>> dropPool
    // dropPoolCutoff.get(i).size = Amount of dropCutoffs in dropPool. dropPoolCutoff.get(i) = Amount of drops in cutoff
    LinkedList<LinkedList<int>> dropPoolCutoff
    LinkedList<int> dropChance // drop chance for each drop pool

    construct(LinkedList<LinkedList<int>> dropPool, LinkedList<int> dropChance)
        this.dropPool = new LinkedList<LinkedList<int>>(dropPool)
        let cutOff = new LinkedList<int>
        cutOff.add(dropPool.get(0).size())
        let cutOffLinked = new LinkedList<LinkedList<int>>
        cutOffLinked.add(cutOff)
        this.dropPoolCutoff = new LinkedList<LinkedList<int>>(cutOffLinked)
        this.dropChance = new LinkedList<int>(dropChance)
    construct(LinkedList<LinkedList<int>> dropPool, LinkedList<LinkedList<int>> dropPoolCutoff, LinkedList<int> dropChance)
        this.dropPool = new LinkedList<LinkedList<int>>(dropPool)
        this.dropPoolCutoff = new LinkedList<LinkedList<int>>(dropPoolCutoff)
        this.dropChance = new LinkedList<int>(dropChance)

public function dropMyItemsCreeps(unit u)
    let uid = u.getTypeId()
    if dropListHash.has(uid)
        let dropList = dropListHash.get(uid)
        for int i = 0 to dropList.dropPool.size() - 1
            let chance = dropList.dropChance.get(i)
            if GetRandomInt(1, 100) <= chance
                let pos = u.getPos()
                var lastCount = 0
                for int j = 0 to dropList.dropPoolCutoff.get(i).size() - 1
                    let cutOff = lastCount + dropList.dropPoolCutoff.get(i).get(j)
                    let random = GetRandomInt(lastCount, cutOff - 1)
                    lastCount = cutOff
                    createItem(dropList.dropPool.get(i).get(random), pos)

public function dropMyItemsMinibosses(unit u)
    let pos = u.getPos()
    for i = 1 to 5
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(1,10)],pos)
            createItem(ITEM_DROP[GetRandomInt(1,10)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 6 to 10
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(1,10)],pos)
            createItem(ITEM_DROP[GetRandomInt(1,10)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 11 to 15
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(1,15)],pos)
            createItem(ITEM_DROP[GetRandomInt(1,10)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 16 to 20
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(5,15)],pos)
            createItem(ITEM_DROP[GetRandomInt(1,10)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 21 to 25
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
            createItem(ITEM_DROP[GetRandomInt(5,15)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 26 to 30
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(20,25)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,25)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,25)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,35)],pos)
            createItem(ITEM_DROP[GetRandomInt(35,40)],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 31 to 35
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
            createItem(ITEM_DROP[GetRandomInt(5,15)],pos)
    for i = 36 to 40
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
            createItem(ITEM_DROP[GetRandomInt(5,15)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 41 to 45
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(15,25)],pos)
            createItem(ITEM_DROP[GetRandomInt(5,15)],pos)
    for i = 46 to 50
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(15,25)],pos)
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 51 to 55
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
    for i = 56 to 58
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(30,50)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,50)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,50)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,50)],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 59 to 62
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 63 to 67
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[GetRandomInt(10,20)],pos)
    for i = 68 to 72
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(25,35)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 73 to 77
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(25,35)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
    for i = 78 to 82
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 83 to 84
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(51,62)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,59)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,52)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,52)],pos)
            createItem(ITEM_DROP[GetRandomInt(40,52)],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
            createItem(ITEM_DROP[53],pos)
    for i = 85 to 85
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,53)],pos)
    for i = 86 to 90
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,53)],pos)
    for i = 86 to 90
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(20,30)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,53)],pos)
    for i = 91 to 95
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(35,45)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,53)],pos)
    for i = 96 to 100
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(35,45)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,53)],pos)
    for i = 101 to 105
        if GetUnitTypeId(u) == WAVE_BOSS[i]
            createItem(ITEM_DROP[GetRandomInt(40,50)],pos)
            createItem(ITEM_DROP[GetRandomInt(30,40)],pos)
            createItem(ITEM_DROP[GetRandomInt(51,53)],pos)

    if GetUnitTypeId(u) == WAVE_HERO_0
        createItem(ITEM_DROP[GetRandomInt(62,64)],pos)
        createItem(ITEM_DROP[GetRandomInt(62,64)],pos)
        createItem(ITEM_DROP[GetRandomInt(54,56)],pos)
        createItem(ITEM_DROP[GetRandomInt(50,53)],pos)
        createItem(ITEM_DROP[GetRandomInt(50,54)],pos)
        createItem(ITEM_DROP[53],pos)
    else if GetUnitTypeId(u) == WAVE_HERO_1
        createItem(ITEM_DROP[GetRandomInt(63,64)],pos)
        createItem(ITEM_DROP[GetRandomInt(62,65)],pos)
        createItem(ITEM_DROP[GetRandomInt(54,56)],pos)
        createItem(ITEM_DROP[GetRandomInt(54,59)],pos)
        createItem(ITEM_DROP[GetRandomInt(57,59)],pos)
        createItem(ITEM_DROP[53],pos)
    else if GetUnitTypeId(u) == WAVE_HERO_2
        createItem(ITEM_DROP[GetRandomInt(63,65)],pos)
        createItem(ITEM_DROP[GetRandomInt(64,65)],pos)
        createItem(ITEM_DROP[GetRandomInt(59,62)],pos)
        createItem(ITEM_DROP[GetRandomInt(61,63)],pos)
        createItem(ITEM_DROP[53],pos)
    else if GetUnitTypeId(u) == WAVE_HERO_3
        createItem(ITEM_DROP[GetRandomInt(64,65)],pos)
        createItem(ITEM_DROP[GetRandomInt(60,62)],pos)
        createItem(ITEM_DROP[GetRandomInt(61,63)],pos)
        createItem(ITEM_DROP[GetRandomInt(66,68)],pos)
        createItem(ITEM_DROP[65],pos)
        createItem(ITEM_DROP[53],pos)
    else if GetUnitTypeId(u) == WAVE_HERO_4
        createItem(ITEM_DROP[GetRandomInt(60,63)],pos)
        createItem(ITEM_DROP[62],pos)
        createItem(ITEM_DROP[63],pos)
        createItem(ITEM_DROP[64],pos)
        createItem(ITEM_DROP[65],pos)
        createItem(ITEM_DROP[GetRandomInt(66,68)],pos)
        createItem(ITEM_DROP[GetRandomInt(66,68)],pos)
        createItem(ITEM_DROP[53],pos)
        createItem(ITEM_DROP[53],pos)
    else if GetUnitTypeId(u) == WAVE_HERO_21
        createItem(ITEM_372,pos)
        createItem(ITEM_350,pos)
    else if GetUnitTypeId(u) == WAVE_HERO_26
        createItem(ITEM_351,pos)
        createItem(ITEM_361,pos)
        createItem(ITEM_276,pos)
        createItem(ITEM_352,pos)
        createItem(ITEM_355,pos)
        createItem(ITEM_176,pos)
        createItem(ITEM_111,pos)