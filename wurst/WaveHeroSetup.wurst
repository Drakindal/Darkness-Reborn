package WaveHeroSetup

import MyUnitIds
import Orders
import ClosureTimers
import HashMap
import MyItemIds
import Victory

timer waveHeroTimer = CreateTimer()
timerdialog waveHeroTimerDialog = CreateTimerDialog(waveHeroTimer)

int waveHeroIndex = 7 // originally 0
unit waveHero = null
unit waveHeroNext = null
real facing = 270
constant boostMap = new HashMap<int,WaveBoost>

init

    boostUnit()
    preloadWaveHeroes()



interface WaveBoost
    function boost(unit u)

function boostUnit()

    boostMap.put(WAVE_HERO_7) (u) -> // Death King
        u.setLevel(50, false)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 1)
    boostMap.put(WAVE_HERO_8) (u) -> // Jacksmith
        u.addStr(50000)
        u.addAgi(10000)
        u.addInt(50000)
        u.setLevel(150, false)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)

    boostMap.put(WAVE_HERO_9) (u) -> // Beastmaster (N02A)
        u.addStr(60000)
        u.addAgi(20000)
        u.addInt(20000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        
    boostMap.put(WAVE_HERO_10) (u) -> // Satyr
        u.addStr(90000)
        u.addAgi(55000)
        u.addInt(10000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0RF', 9)
        u.addAbility('A0RV', 9)
        u.addAbility('A0RG', 9)
        u.addAbility('A0RE', 9)
        u.addAbility('A01K', 4)

    boostMap.put(WAVE_HERO_11) (u) -> // Warden
        u.addStr(130000)
        u.addAgi(55000)
        u.addInt(10000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0D8', 9)
        u.addAbility('A00R', 9)
        u.addAbility('A00T', 9)

    boostMap.put(WAVE_HERO_12) (u) -> // Blademaster
        u.addStr(100000)
        u.addAgi(55000)
        u.addInt(15000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A07O', 9)
        u.addAbility('A07N', 9)

    boostMap.put(WAVE_HERO_13) (u) -> // Tauren Chieftain
        u.addStr(70000)
        u.addAgi(50000)
        u.addInt(20000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A00V', 9)
        u.addAbility('A0CI', 9)
        u.addAbility('A01B', 9)
        u.addAbility('A01E', 9)
        u.addAbility('A01A', 4)

    boostMap.put(WAVE_HERO_14) (u) -> // Wolfman
        u.addStr(70000)
        u.addAgi(50000)
        u.addInt(25000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0M0', 9)
        u.addAbility('A0S9', 9)
        u.addAbility('A0SE', 9)
        u.addAbility('A0SD', 4)
        u.addAbility('A0SA', 4)

    boostMap.put(WAVE_HERO_15) (u) -> // Mountain King
        u.addStr(75000)
        u.addAgi(40000)
        u.addInt(30000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0C4', 9)
        u.addAbility('A0DW', 9)
        u.addAbility('A0DZ', 4)

    boostMap.put(WAVE_HERO_16) (u) -> // Dark Ranger
        u.addStr(100000)
        u.addAgi(50000)
        u.addInt(40000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0C4', 1)
        u.addAbility('A00P', 9)
        u.addAbility('A00G', 9)

    boostMap.put(WAVE_HERO_17) (u) -> // Dreadlord
        u.addStr(111000)
        u.addAgi(60000)
        u.addInt(45000)
        u.setLevel(150, false)
        u.setScale(1.5)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_4, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_5, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0R4', 9)
        u.addAbility('A0R7', 9)
        u.addAbility('A0R5', 9)
        u.addAbility('A0R6', 4)
        u.addAbility('A0RD', 4)

    boostMap.put(WAVE_HERO_18) (u) -> // Pit Lord
        u.addStr(55000)
        u.addAgi(100000)
        u.addInt(50000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_8, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0C4', 1)
        u.addAbility('A0RS', 9)
        u.addAbility('A0RL', 9)
        u.addAbility('A0RI', 9)

    boostMap.put(WAVE_HERO_19) (u) -> // Ranger
        u.addStr(120000)
        u.addAgi(90000)
        u.addInt(55000)
        u.setLevel(150, false)
        u.setScale(1.5)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_9, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0C4', 1)
        u.addAbility('A0AO', 9)
        u.addAbility('A0F0', 9)
        u.addAbility('A0CH', 9)
        u.addAbility('A0AP', 9)
        u.addAbility('A0F1', 4)

    boostMap.put(WAVE_HERO_20) (u) -> // Demon Hunter
        u.addStr(100000)
        u.addAgi(100000)
        u.addInt(100000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_9, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)
        u.addAbility('A0C4', 1)
        u.addAbility('A0RW', 9)
        u.addAbility('A0TK', 9)
        u.addAbility('A008', 9)

    boostMap.put(WAVE_HERO_21) (u) -> // Shodow Hunter
        u.addStr(200000)
        u.addAgi(200000)
        u.addInt(200000)
        u.setLevel(150, false)
        u.setScale(1.5)
        u.addItemToSlot(FINAL_BOSS_ITEM_10, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_8, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_11, 5)
        u.addAbility('A0M9', 9)
        u.addAbility('A0M3', 9)
        u.addAbility('A0MI', 4)

    boostMap.put(WAVE_HERO_22) (u) -> // Assasin
        u.addStr(400000)
        u.addAgi(200000)
        u.addInt(300000)
        u.setLevel(150, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_12, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_13, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_14, 5)
        u.addAbility('A0DA', 9)
        u.addAbility('A0DC', 9)
        u.addAbility('A0GM', 9)
        u.addAbility('A0GJ', 4)

    boostMap.put(WAVE_HERO_23) (u) -> // Priestess of the Moon
        u.addStr(700000)
        u.addAgi(200000)
        u.addInt(300000)
        u.setLevel(150, false)
        u.setScale(1.5)
        u.addItemToSlot(FINAL_BOSS_ITEM_15, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_13, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_17, 5)
        u.addAbility('A08A', 9)
        u.addAbility('A087', 9)
        u.addAbility('A08C', 9)

    boostMap.put(WAVE_HERO_24) (u) -> // Naga Sea Witch
        u.addStr(900000)
        u.addAgi(200000)
        u.addInt(200000)
        u.setLevel(150, false)
        u.setScale(1.5)
        u.addItemToSlot(FINAL_BOSS_ITEM_16, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_13, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_18, 5)
        u.addAbility('A000', 9)
        u.addAbility('A0AI', 9)
        u.addAbility('A0AN', 4)

    boostMap.put(WAVE_HERO_25) (u) -> // Time Wizard
        u.addStr(900000)
        u.addAgi(200000)
        u.addInt(250000)
        u.setLevel(150, false)
        u.setScale(1.5)
        u.addItemToSlot(FINAL_BOSS_ITEM_16, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_2, 1)
        u.addItemToSlot(FINAL_BOSS_ITEM_3, 2)
        u.addItemToSlot(FINAL_BOSS_ITEM_7, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_13, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_19, 5)
        u.addAbility('A0K5', 4)
        u.addAbility('A0ND', 4)
        u.addAbility('A0N4', 4)

    boostMap.put(WAVE_HERO_26) (u) -> // Death Eyes
        u.addStr(90000)
        u.addAgi(55000)
        u.addInt(10000)
        u.setLevel(70, false)
        u.setScale(2)
        u.addItemToSlot(FINAL_BOSS_ITEM_1, 0)
        u.addItemToSlot(FINAL_BOSS_ITEM_11, 1)
        u.addItemToSlot(ITEM_DROP_83, 2)
        u.addItemToSlot(ITEM_DROP_85, 3)
        u.addItemToSlot(FINAL_BOSS_ITEM_22, 4)
        u.addItemToSlot(FINAL_BOSS_ITEM_0, 5)

function preloadWaveHeroes()
    for i = 1 to 30
        let u = createUnit(Player(11), WAVE_HERO[i], gg_rct_MiddleSpawn.getCenter(), facing.asAngleDegrees())
        let unitID = GetUnitTypeId(u)
        if boostMap.has(unitID)
            boostMap.get(unitID).boost(u)
        RemoveUnit(u)

function waveHeroSpawn()

    waveHeroIndex = waveHeroIndex + 1
    waveHero = createUnit(Player(11), WAVE_HERO[waveHeroIndex], gg_rct_MiddleSpawn.getCenter(), facing.asAngleDegrees())
    waveHero.issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove2.getCenter())
    waveHeroDeath()
    let unitID = GetUnitTypeId(waveHero)
    if boostMap.has(unitID)
        boostMap.get(unitID).boost(waveHero)

function waveHeroDeath()
    CreateTrigger()..registerUnitEvent(waveHero, EVENT_UNIT_DEATH)..addAction() ->
        let u = GetUnitTypeId(GetDyingUnit())

        if u == WAVE_HERO_7
            CreateItemLoc(ITEM_DROP_153,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_8
            CreateItemLoc(ITEM_176,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_9
            CreateItemLoc(ITEM_DROP_155,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_10
            CreateItemLoc(ITEM_DROP_85,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_11
            CreateItemLoc(ITEM_DROP_156,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_12
            CreateItemLoc(ITEM_DROP_157,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_13
            CreateItemLoc(ITEM_DROP_158,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_14
            CreateItemLoc(ITEM_DROP_110,GetUnitLoc(GetDyingUnit()))
            CreateItemLoc(FINAL_BOSS_ITEM_1,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_15
            CreateItemLoc(ITEM_DROP_159,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_16
            CreateItemLoc(ITEM_DROP_86,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_17
            CreateItemLoc(ITEM_DROP_87,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_18
            CreateItemLoc(ITEM_DROP_160,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_19
            CreateItemLoc(ITEM_DROP_142,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_20
            CreateItemLoc(ITEM_123,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_21
            CreateItemLoc(ITEM_DROP_138,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_29
            let final = createUnit(Player(11), FINAL_BOSS, gg_rct_MiddleSpawn.getCenter(), facing.asAngleDegrees())
            final.setStr(30000)
            final.setAgi(30000)
            final.setInt(30000)
            final.setLevel(199, false)
            final.addAbility('A00W', 1)
            final.addAbility('A0ZA', 4)
            final.issueImmediateOrder("thunderclap")
            final.issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove2.randomPoint())
            onVictorySetup(final)

function waveHeroTimerElapsed()
    CreateTrigger()..registerTimerExpireEvent(waveHeroTimer)..addAction() ->
        doAfter(0.05) -> 
            if waveHeroIndex < 30
                waveHeroTimerDialog..setTitle(GetObjectName(WAVE_HERO[waveHeroIndex+1]))..setTimeColor(155, 155, 155, 0)..display(true)
            else
                waveHeroTimer.destr()
                waveHeroTimerDialog.destr()

public function waveHeroSetup()
    waveHeroTimerElapsed()
    waveHeroTimer.startPeriodic(10, function waveHeroSpawn)
    waveHeroTimerDialog..setTitle("Dragon - Ysera")..setTimeColor(155, 155, 155, 0)..display(true)