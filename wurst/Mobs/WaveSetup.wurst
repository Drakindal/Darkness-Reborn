package WaveSetup

import calcLowerHigher
import WaveHeroSetup
import ClosureTimers
import MyUnitIds
import Orders
import ItemDrops
import codeDamageTypings
import MultiboardTimer
import LinkedList
import ClosureEvents

var internalWaveCount = 0

let wavesList = new LinkedList<Waves>
let bossWaveList = new LinkedList<BossWaves>
let bigBossWaveList = new LinkedList<BossWaves>

init
	CREEP_LEFT_MUD_GOLEM.enumerateMagicResistance(80)
	CREEP_LEFT_ROCK_GOLEM.enumerateMagicResistance(80)
	CREEP_LEFT_GRANITE_GOLEM.enumerateMagicResistance(80)

	CREEP_ELITE_FROSTY_THE_SNOWMAN.enumerateMagicResistance(40)
	CREEP_ELITE_ICE_REVENANT..enumerateMagicResistance(60)

	WAVE_MOB[1]..enumerateMagicResistance(0).enumeratePhysicalPenetration(0)
	WAVE_MOB[2]..enumerateMagicResistance(10).enumeratePhysicalPenetration(50)
	WAVE_MOB[3]..enumerateMagicResistance(30).enumeratePhysicalPenetration(0)
	WAVE_MOB[4]..enumerateMagicResistance(0).enumeratePhysicalPenetration(20)

	WAVE_MOB[5]..enumerateMagicResistance(15).enumeratePhysicalPenetration(40)
	WAVE_MOB[6]..enumerateMagicResistance(0).enumeratePhysicalPenetration(80)
	WAVE_MOB[7]..enumerateMagicResistance(25).enumeratePhysicalPenetration(40)
	WAVE_MOB[8]..enumerateMagicResistance(10).enumeratePhysicalPenetration(0)

	WAVE_MOB[9]..enumerateMagicResistance(10).enumeratePhysicalPenetration(0)
	WAVE_MOB[10]..enumerateMagicResistance(0).enumeratePhysicalPenetration(0)
	WAVE_MOB[11]..enumerateMagicResistance(40).enumeratePhysicalPenetration(10)
	WAVE_MOB[12]..enumerateMagicResistance(0).enumeratePhysicalPenetration(0)

	WAVE_MOB[13]..enumerateMagicResistance(1).enumeratePhysicalPenetration(40)
	WAVE_MOB[14]..enumerateMagicResistance(10).enumeratePhysicalPenetration(20)
	WAVE_MOB[15]..enumerateMagicResistance(15).enumeratePhysicalPenetration(15)
	WAVE_MOB[16]..enumerateMagicResistance(9).enumeratePhysicalPenetration(0)

	WAVE_MOB[17]..enumerateMagicResistance(40).enumeratePhysicalPenetration(0)
	WAVE_MOB[18]..enumerateMagicResistance(0).enumeratePhysicalPenetration(20)
	WAVE_MOB[19]..enumerateMagicResistance(0).enumeratePhysicalPenetration(60)
	WAVE_MOB[20]..enumerateMagicResistance(0).enumeratePhysicalPenetration(0)

	WAVE_BOSS[1]..enumerateMagicResistance(40).enumeratePhysicalPenetration(0)
	WAVE_BOSS[2]..enumerateMagicResistance(20).enumeratePhysicalPenetration(10)
	WAVE_BOSS[3]..enumerateMagicResistance(0).enumeratePhysicalPenetration(5)
	WAVE_BOSS[4]..enumerateMagicResistance(30).enumeratePhysicalPenetration(15)
	WAVE_BOSS[5]..enumerateMagicResistance(0).enumeratePhysicalPenetration(10)

	WAVE_BOSS[6]..enumerateMagicResistance(40).enumeratePhysicalPenetration(0)
	WAVE_BOSS[7]..enumerateMagicResistance(60).enumeratePhysicalPenetration(0)
	WAVE_BOSS[8]..enumerateMagicResistance(0).enumeratePhysicalPenetration(10)
	WAVE_BOSS[9]..enumerateMagicResistance(60).enumeratePhysicalPenetration(15)
	WAVE_BOSS[10]..enumerateMagicResistance(0).enumeratePhysicalPenetration(15)

	WAVE_BOSS[11]..enumerateMagicResistance(15).enumeratePhysicalPenetration(40)
	WAVE_BOSS[12]..enumerateMagicResistance(60).enumeratePhysicalPenetration(10)
	WAVE_BOSS[13]..enumerateMagicResistance(10).enumeratePhysicalPenetration(20)
	WAVE_BOSS[14]..enumerateMagicResistance(10).enumeratePhysicalPenetration(15)
	WAVE_BOSS[15]..enumerateMagicResistance(50).enumeratePhysicalPenetration(25)

	WAVE_BOSS[16]..enumerateMagicResistance(80).enumeratePhysicalPenetration(5)
	WAVE_BOSS[17]..enumerateMagicResistance(20).enumeratePhysicalPenetration(20)
	WAVE_BOSS[18]..enumerateMagicResistance(30).enumeratePhysicalPenetration(40)
	WAVE_BOSS[19]..enumerateMagicResistance(10).enumeratePhysicalPenetration(50)
	WAVE_BOSS[20]..enumerateMagicResistance(50).enumeratePhysicalPenetration(20)

	WAVE_BOSS[21]..enumerateMagicResistance(80).enumeratePhysicalPenetration(20)
	WAVE_BOSS[22]..enumerateMagicResistance(20).enumeratePhysicalPenetration(15)
	WAVE_BOSS[23]..enumerateMagicResistance(15).enumeratePhysicalPenetration(25)
	WAVE_BOSS[24]..enumerateMagicResistance(15).enumeratePhysicalPenetration(25)
	WAVE_BOSS[25]..enumerateMagicResistance(90).enumeratePhysicalPenetration(10)

	WAVE_BOSS[26]..enumerateMagicResistance(10).enumeratePhysicalPenetration(30)
	WAVE_BOSS[27]..enumerateMagicResistance(50).enumeratePhysicalPenetration(15)
	WAVE_BOSS[28]..enumerateMagicResistance(50).enumeratePhysicalPenetration(15)
	WAVE_BOSS[29]..enumerateMagicResistance(80).enumeratePhysicalPenetration(20)
	WAVE_BOSS[30]..enumerateMagicResistance(60).enumeratePhysicalPenetration(25)

	WAVE_BOSS[31]..enumerateMagicResistance(90).enumeratePhysicalPenetration(10)
	WAVE_BOSS[32]..enumerateMagicResistance(20).enumeratePhysicalPenetration(20)
	WAVE_BOSS[33]..enumerateMagicResistance(60).enumeratePhysicalPenetration(10)
	WAVE_BOSS[34]..enumerateMagicResistance(25).enumeratePhysicalPenetration(15)
	WAVE_BOSS[35]..enumerateMagicResistance(40).enumeratePhysicalPenetration(10)

	WAVE_BOSS[36]..enumerateMagicResistance(60).enumeratePhysicalPenetration(20)
	WAVE_BOSS[37]..enumerateMagicResistance(30).enumeratePhysicalPenetration(0)
	WAVE_BOSS[38]..enumerateMagicResistance(50).enumeratePhysicalPenetration(15)
	WAVE_BOSS[39]..enumerateMagicResistance(10).enumeratePhysicalPenetration(60)
	WAVE_BOSS[40]..enumerateMagicResistance(60).enumeratePhysicalPenetration(20)

	WAVE_BOSS[41]..enumerateMagicResistance(0).enumeratePhysicalPenetration(25)
	WAVE_BOSS[42]..enumerateMagicResistance(20).enumeratePhysicalPenetration(15)
	WAVE_BOSS[43]..enumerateMagicResistance(60).enumeratePhysicalPenetration(0)
	WAVE_BOSS[44]..enumerateMagicResistance(20).enumeratePhysicalPenetration(20)
	WAVE_BOSS[45]..enumerateMagicResistance(50).enumeratePhysicalPenetration(25)

	WAVE_BOSS[46]..enumerateMagicResistance(40).enumeratePhysicalPenetration(30)
	WAVE_BOSS[47]..enumerateMagicResistance(50).enumeratePhysicalPenetration(0)
	WAVE_BOSS[48]..enumerateMagicResistance(40).enumeratePhysicalPenetration(20)
	WAVE_BOSS[49]..enumerateMagicResistance(20).enumeratePhysicalPenetration(40)
	WAVE_BOSS[50]..enumerateMagicResistance(50).enumeratePhysicalPenetration(20)

	WAVE_BOSS[51]..enumerateMagicResistance(40).enumeratePhysicalPenetration(0)
	WAVE_BOSS[52]..enumerateMagicResistance(60).enumeratePhysicalPenetration(20)
	WAVE_BOSS[53]..enumerateMagicResistance(10).enumeratePhysicalPenetration(20)
	WAVE_BOSS[54]..enumerateMagicResistance(20).enumeratePhysicalPenetration(15)
	WAVE_BOSS[55]..enumerateMagicResistance(50).enumeratePhysicalPenetration(25)

	WAVE_BOSS[56]..enumerateMagicResistance(60).enumeratePhysicalPenetration(20)
	WAVE_BOSS[57]..enumerateMagicResistance(80).enumeratePhysicalPenetration(15)
	WAVE_BOSS[58]..enumerateMagicResistance(20).enumeratePhysicalPenetration(25)
	WAVE_BOSS[59]..enumerateMagicResistance(40).enumeratePhysicalPenetration(40)
	WAVE_BOSS[60]..enumerateMagicResistance(10).enumeratePhysicalPenetration(25)

	WAVE_BOSS[61]..enumerateMagicResistance(50).enumeratePhysicalPenetration(0)
	WAVE_BOSS[62]..enumerateMagicResistance(40).enumeratePhysicalPenetration(20)
	WAVE_BOSS[63]..enumerateMagicResistance(15).enumeratePhysicalPenetration(10)
	WAVE_BOSS[64]..enumerateMagicResistance(35).enumeratePhysicalPenetration(15)
	WAVE_BOSS[65]..enumerateMagicResistance(50).enumeratePhysicalPenetration(10)

	WAVE_BOSS[66]..enumerateMagicResistance(30).enumeratePhysicalPenetration(20)
	WAVE_BOSS[67]..enumerateMagicResistance(80).enumeratePhysicalPenetration(0)
	WAVE_BOSS[68]..enumerateMagicResistance(20).enumeratePhysicalPenetration(15)
	WAVE_BOSS[69]..enumerateMagicResistance(80).enumeratePhysicalPenetration(0)
	WAVE_BOSS[70]..enumerateMagicResistance(35).enumeratePhysicalPenetration(15)

	WAVE_BOSS[71]..enumerateMagicResistance(20).enumeratePhysicalPenetration(15)
	WAVE_BOSS[72]..enumerateMagicResistance(35).enumeratePhysicalPenetration(45)
	WAVE_BOSS[73]..enumerateMagicResistance(25).enumeratePhysicalPenetration(25)
	WAVE_BOSS[74]..enumerateMagicResistance(40).enumeratePhysicalPenetration(10)
	WAVE_BOSS[75]..enumerateMagicResistance(25).enumeratePhysicalPenetration(15)

	WAVE_BOSS[76]..enumerateMagicResistance(25).enumeratePhysicalPenetration(30)
	WAVE_BOSS[77]..enumerateMagicResistance(80).enumeratePhysicalPenetration(25)
	WAVE_BOSS[78]..enumerateMagicResistance(40).enumeratePhysicalPenetration(20)
	WAVE_BOSS[79]..enumerateMagicResistance(20).enumeratePhysicalPenetration(25)
	WAVE_BOSS[80]..enumerateMagicResistance(45).enumeratePhysicalPenetration(15)

	WAVE_BOSS[81]..enumerateMagicResistance(25).enumeratePhysicalPenetration(40)
	WAVE_BOSS[82]..enumerateMagicResistance(60).enumeratePhysicalPenetration(10)
	WAVE_BOSS[83]..enumerateMagicResistance(50).enumeratePhysicalPenetration(20)
	WAVE_BOSS[84]..enumerateMagicResistance(40).enumeratePhysicalPenetration(25)
	WAVE_BOSS[85]..enumerateMagicResistance(35).enumeratePhysicalPenetration(15)

	WAVE_BOSS[86]..enumerateMagicResistance(25).enumeratePhysicalPenetration(20)
	WAVE_BOSS[87]..enumerateMagicResistance(40).enumeratePhysicalPenetration(30)
	WAVE_BOSS[88]..enumerateMagicResistance(65).enumeratePhysicalPenetration(15)
	WAVE_BOSS[89]..enumerateMagicResistance(30).enumeratePhysicalPenetration(15)
	WAVE_BOSS[90]..enumerateMagicResistance(30).enumeratePhysicalPenetration(10)

	WAVE_BOSS[91]..enumerateMagicResistance(30).enumeratePhysicalPenetration(15)
	WAVE_BOSS[92]..enumerateMagicResistance(30).enumeratePhysicalPenetration(20)
	WAVE_BOSS[93]..enumerateMagicResistance(50).enumeratePhysicalPenetration(40)
	WAVE_BOSS[94]..enumerateMagicResistance(80).enumeratePhysicalPenetration(20)
	WAVE_BOSS[95]..enumerateMagicResistance(40).enumeratePhysicalPenetration(60)

	WAVE_BOSS[96]..enumerateMagicResistance(60).enumeratePhysicalPenetration(40)
	WAVE_BOSS[97]..enumerateMagicResistance(40).enumeratePhysicalPenetration(20)
	WAVE_BOSS[98]..enumerateMagicResistance(50).enumeratePhysicalPenetration(40)
	WAVE_BOSS[99]..enumerateMagicResistance(40).enumeratePhysicalPenetration(60)
	WAVE_BOSS[100]..enumerateMagicResistance(40).enumeratePhysicalPenetration(40)
	
	WAVE_BOSS[101]..enumerateMagicResistance(60).enumeratePhysicalPenetration(20)
	WAVE_BOSS[102]..enumerateMagicResistance(40).enumeratePhysicalPenetration(30)
	WAVE_BOSS[103]..enumerateMagicResistance(60).enumeratePhysicalPenetration(50)
	WAVE_BOSS[104]..enumerateMagicResistance(40).enumeratePhysicalPenetration(30)
	WAVE_BOSS[105]..enumerateMagicResistance(40).enumeratePhysicalPenetration(15)

	WAVE_HERO_0.enumerateMagicResistance(60)
	WAVE_HERO_1.enumerateMagicResistance(60)
	WAVE_HERO_2.enumerateMagicResistance(60)
	WAVE_HERO_3.enumerateMagicResistance(60)
	WAVE_HERO_4.enumerateMagicResistance(60)
	WAVE_HERO_5.enumerateMagicResistance(90)
	WAVE_HERO_6..enumerateMagicResistance(70).enumeratePhysicalPenetration(15)
	WAVE_HERO_27..enumerateMagicResistance(80).enumeratePhysicalPenetration(40)
	WAVE_HERO_28.enumerateMagicResistance(99)
	WAVE_HERO_29.enumerateMagicResistance(80)


class Waves
	int unitID
	
	construct(int unitID)
		this.unitID = unitID

class BossWaves
	int bossMin
	int bossMax

	construct(int bossMin, int bossMax)
		this.bossMin = bossMin
		this.bossMax = bossMax

function wavesSetup()
	for int i = 1 to 20
		wavesList.add(new Waves(WAVE_MOB[i]))
		bossWaveList.add(new BossWaves(calc_miniBossLower(i), calc_miniBossHigher(i)))
	for int i = 1 to 4
		bigBossWaveList.add(new BossWaves(calc_lowerBigBoss(i), calc_higherBigBoss(i)))
	


function continueUnitStats(integer uId) returns string
	return "|r\n|c00aa3101Physical Pen: " + (uId.getPen(penetrationType.PHYSICAL) * 100).toString() + "%|r\n|c003228ffMagical Resistance: " + (uId.getRes(resistanceType.MAGICAL) * 100).toString() + "%|r\n"

function unit.unitStats(int whichSide)
	let uId = this.getTypeId()
	switch whichSide
		case 1
			printTimed("Left Side Boss" + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		case 2
			printTimed("Middle Boss " + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		case 3
			printTimed("Right Side Boss " + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		case 4
			printTimed("|c00c90c0c!!!WARNING!!!|r\nBig Boss " + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		default
			printTimed("Wave: " + (21-wavesList.size()).toString() + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)

function spawnBigBoss()
	if bigBossWaveList.isEmpty()
		skip
	else
		titleString = "Big Boss Wave "+ bigBossWaveList.size().toString()
		graceWaveSpawnCb = doAfter(10) -> //2 seconds
			let big_lower = bigBossWaveList.get(0).bossMin
			let big_higher = bigBossWaveList.get(0).bossMax
			bigBossWaveList.removeAt(0)
			createUnit(Player(11), WAVE_BOSS[GetRandomInt(big_lower, big_higher)], gg_rct_MiddleSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(4)
			..minibossDeath()
			if wavesList.isEmpty()
				waveHeroSetup()
			else
				titleString = "Wave "+(21-wavesList.size()).toString()+" — (1/3)"
				graceWaveSpawnCb = doAfter(90) ->
					internalWaveCount = 1
					spawnWavesNow()

function spawnBoss()
	if bossWaveList.isEmpty()
		skip
	else
		titleString = "Boss Wave "+(21-wavesList.size()+1).toString()
		graceWaveSpawnCb = doAfter(2) -> // 2 seconds
			let mini_lower = bossWaveList.get(0).bossMin
			let mini_higher = bossWaveList.get(0).bossMax
			bossWaveList.removeAt(0)
			createUnit(Player(11), WAVE_BOSS[GetRandomInt(mini_lower, mini_higher)], gg_rct_LeftSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(1)
			..minibossDeath()

			createUnit(Player(12), WAVE_BOSS[GetRandomInt(mini_lower, mini_higher)], gg_rct_MiddleSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(2)
			..minibossDeath()

			createUnit(Player(13), WAVE_BOSS[GetRandomInt(mini_lower, mini_higher)], gg_rct_RightSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(3)
			..minibossDeath()
			if (20-wavesList.size()) % 5 == 0 and wavesList.size() != 20
				spawnBigBoss()
			else
				waveSetupTimerElapsed()
			

function spawnWave()
	createUnit(Player(11), wavesList.get(0).unitID, gg_rct_LeftSpawn.randomPoint(), bj_UNIT_FACING.asAngleDegrees()).issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
		
	createUnit(Player(12), wavesList.get(0).unitID, gg_rct_MiddleSpawn.randomPoint(), bj_UNIT_FACING.asAngleDegrees()).issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove1.randomPoint())

	createUnit(Player(13), wavesList.get(0).unitID, gg_rct_RightSpawn.randomPoint(), bj_UNIT_FACING.asAngleDegrees()).issuePointOrderById(Orders.attack, gg_rct_RightSpawnMove1.randomPoint())

function readWaveStats()
	createUnit(wavesList.get(0).unitID)..unitStats(0).remove()

function spawnWavesNow()
	if wavesList.isEmpty() == false
		if internalWaveCount == 1
			readWaveStats()

		doPeriodicallyCounted(0.02, 12) (CallbackCounted cb) ->
			spawnWave()

		if internalWaveCount == 3 and bossWaveList.isEmpty() == false
			spawnBoss()
			destroy wavesList.get(0)
			wavesList.removeAt(0)
		else
			waveSetupTimerElapsed()
		
function unit.minibossDeath()
	EventListener.add(this, EVENT_PLAYER_UNIT_DEATH) -> 
		dropMyItemsMinibosses(this)

function moveUnitsCond() returns boolean
	return GetOwningPlayer(GetEnteringUnit()) == Player(11) or GetOwningPlayer(GetEnteringUnit()) == Player(12) or GetOwningPlayer(GetEnteringUnit()) == Player(13)

function waveSetupTimerElapsed()
	if internalWaveCount == 3
		internalWaveCount = 1
		if wavesList.size() > 10
			graceWaveSpawnCb = doAfter(45) -> //50 seconds
				spawnWavesNow()
		else
			graceWaveSpawnCb = doAfter(50) -> //50 seconds
				spawnWavesNow()
	else 
		internalWaveCount = internalWaveCount + 1
		graceWaveSpawnCb = doAfter(30) -> //20 seconds
			spawnWavesNow()
	titleString = "Wave "+(21-wavesList.size()).toString()+" — ("+internalWaveCount.toString()+"/3)"

public function waveSetup()
	moveUnit()
	moveUnit2()
	waveSetupTimerElapsed()

function moveUnit()
	CreateTrigger()
	..registerRectEnterEventSource(gg_rct_LeftSpawnMove1)
	..registerRectEnterEventSource(gg_rct_RightSpawnMove1)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove1.randomPoint())

function moveUnit2()
	CreateTrigger()
	..registerRectEnterEventSource(gg_rct_AllSpawnMove1)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove2.randomPoint())

public function preWaveSetup()
	wavesSetup()
	titleString = "Preparation Phase "
	graceWaveSpawnCb = doAfter(120) -> //120 seconds
		waveSetup()

	CreateTrigger()..registerRectEnterEventSource(gg_rct_LeftSpawn)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())

	CreateTrigger()..registerRectEnterEventSource(gg_rct_RightSpawn)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_RightSpawnMove1.randomPoint())

	CreateTrigger()..registerRectEnterEventSource(gg_rct_MiddleSpawn)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove1.randomPoint())