package WaveSetup

import calcLowerHigher
import WaveHeroSetup
import ClosureTimers
import MyUnitIds
import Orders
import ItemDrops
import codeDamageTypings
import MultiboardTimer
import LinkedList
import ClosureEvents

var internalWaveCount = 0
var externalWaveCount = 1
var internalBigBossCount = 0

let wavesList = new LinkedList<Waves>
let bossWaveList = new LinkedList<BossWaves>
let bigBossWaveList = new LinkedList<BossWaves>

init
	LEFT_CREEP_1.enumerateMagicResistanceId(80)
	LEFT_CREEP_7.enumerateMagicResistanceId(80)
	LEFT_CREEP_13.enumerateMagicResistanceId(80)

	ELITE_CREEP_8.enumerateMagicResistanceId(40)
	ELITE_CREEP_9..enumerateMagicResistanceId(60)

	WAVE_MOB[1]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(0)
	WAVE_MOB[2]..enumeratePhysicalPenetrationId(10).enumeratePhysicalPenetrationId(50)
	WAVE_MOB[3]..enumeratePhysicalPenetrationId(30).enumeratePhysicalPenetrationId(0)
	WAVE_MOB[4]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(20)

	WAVE_MOB[5]..enumeratePhysicalPenetrationId(15).enumeratePhysicalPenetrationId(40)
	WAVE_MOB[6]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(80)
	WAVE_MOB[7]..enumeratePhysicalPenetrationId(25).enumeratePhysicalPenetrationId(40)
	WAVE_MOB[8]..enumeratePhysicalPenetrationId(10).enumeratePhysicalPenetrationId(0)

	WAVE_MOB[9]..enumeratePhysicalPenetrationId(10).enumeratePhysicalPenetrationId(0)
	WAVE_MOB[10]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(0)
	WAVE_MOB[11]..enumeratePhysicalPenetrationId(40).enumeratePhysicalPenetrationId(10)
	WAVE_MOB[12]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(0)

	WAVE_MOB[13]..enumeratePhysicalPenetrationId(1).enumeratePhysicalPenetrationId(40)
	WAVE_MOB[14]..enumeratePhysicalPenetrationId(10).enumeratePhysicalPenetrationId(20)
	WAVE_MOB[15]..enumeratePhysicalPenetrationId(15).enumeratePhysicalPenetrationId(15)
	WAVE_MOB[16]..enumeratePhysicalPenetrationId(9).enumeratePhysicalPenetrationId(0)

	WAVE_MOB[17]..enumeratePhysicalPenetrationId(40).enumeratePhysicalPenetrationId(0)
	WAVE_MOB[18]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(20)
	WAVE_MOB[19]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(60)
	WAVE_MOB[20]..enumeratePhysicalPenetrationId(0).enumeratePhysicalPenetrationId(0)

	WAVE_BOSS[1]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[2]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[3]..enumerateMagicResistanceId(0).enumeratePhysicalPenetrationId(5)
	WAVE_BOSS[4]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[5]..enumerateMagicResistanceId(0).enumeratePhysicalPenetrationId(10)

	WAVE_BOSS[6]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[7]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[8]..enumerateMagicResistanceId(0).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[9]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[10]..enumerateMagicResistanceId(0).enumeratePhysicalPenetrationId(15)

	WAVE_BOSS[11]..enumerateMagicResistanceId(15).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[12]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[13]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[14]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[15]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(25)

	WAVE_BOSS[16]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(5)
	WAVE_BOSS[17]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[18]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[19]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(50)
	WAVE_BOSS[20]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(20)

	WAVE_BOSS[21]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[22]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[23]..enumerateMagicResistanceId(15).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[24]..enumerateMagicResistanceId(15).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[25]..enumerateMagicResistanceId(90).enumeratePhysicalPenetrationId(10)

	WAVE_BOSS[26]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(30)
	WAVE_BOSS[27]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[28]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[29]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[30]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(25)

	WAVE_BOSS[31]..enumerateMagicResistanceId(90).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[32]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[33]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[34]..enumerateMagicResistanceId(25).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[35]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(10)

	WAVE_BOSS[36]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[37]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[38]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[39]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(60)
	WAVE_BOSS[40]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(20)

	WAVE_BOSS[41]..enumerateMagicResistanceId(0).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[42]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[43]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[44]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[45]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(25)

	WAVE_BOSS[46]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(30)
	WAVE_BOSS[47]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[48]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[49]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[50]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(20)

	WAVE_BOSS[51]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[52]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[53]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[54]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[55]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(25)

	WAVE_BOSS[56]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[57]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[58]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[59]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[60]..enumerateMagicResistanceId(10).enumeratePhysicalPenetrationId(25)

	WAVE_BOSS[61]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[62]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[63]..enumerateMagicResistanceId(15).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[64]..enumerateMagicResistanceId(35).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[65]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(10)

	WAVE_BOSS[66]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[67]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[68]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[69]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(0)
	WAVE_BOSS[70]..enumerateMagicResistanceId(35).enumeratePhysicalPenetrationId(15)

	WAVE_BOSS[71]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[72]..enumerateMagicResistanceId(35).enumeratePhysicalPenetrationId(45)
	WAVE_BOSS[73]..enumerateMagicResistanceId(25).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[74]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[75]..enumerateMagicResistanceId(25).enumeratePhysicalPenetrationId(15)

	WAVE_BOSS[76]..enumerateMagicResistanceId(25).enumeratePhysicalPenetrationId(30)
	WAVE_BOSS[77]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[78]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[79]..enumerateMagicResistanceId(20).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[80]..enumerateMagicResistanceId(45).enumeratePhysicalPenetrationId(15)

	WAVE_BOSS[81]..enumerateMagicResistanceId(25).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[82]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(10)
	WAVE_BOSS[83]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[84]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(25)
	WAVE_BOSS[85]..enumerateMagicResistanceId(35).enumeratePhysicalPenetrationId(15)

	WAVE_BOSS[86]..enumerateMagicResistanceId(25).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[87]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(30)
	WAVE_BOSS[88]..enumerateMagicResistanceId(65).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[89]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[90]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(10)

	WAVE_BOSS[91]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(15)
	WAVE_BOSS[92]..enumerateMagicResistanceId(30).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[93]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[94]..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[95]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(60)

	WAVE_BOSS[96]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[97]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[98]..enumerateMagicResistanceId(50).enumeratePhysicalPenetrationId(40)
	WAVE_BOSS[99]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(60)
	WAVE_BOSS[100]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(40)
	
	WAVE_BOSS[101]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(20)
	WAVE_BOSS[102]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(30)
	WAVE_BOSS[103]..enumerateMagicResistanceId(60).enumeratePhysicalPenetrationId(50)
	WAVE_BOSS[104]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(30)
	WAVE_BOSS[105]..enumerateMagicResistanceId(40).enumeratePhysicalPenetrationId(15)

	WAVE_HERO_0.enumerateMagicResistanceId(60)
	WAVE_HERO_1.enumerateMagicResistanceId(60)
	WAVE_HERO_2.enumerateMagicResistanceId(60)
	WAVE_HERO_3.enumerateMagicResistanceId(60)
	WAVE_HERO_4.enumerateMagicResistanceId(60)
	WAVE_HERO_5.enumerateMagicResistanceId(90)
	WAVE_HERO_6..enumerateMagicResistanceId(70).enumeratePhysicalPenetrationId(15)
	WAVE_HERO_27..enumerateMagicResistanceId(80).enumeratePhysicalPenetrationId(40)
	WAVE_HERO_28.enumerateMagicResistanceId(99)
	WAVE_HERO_29.enumerateMagicResistanceId(80)


class Waves
	int unitID
	
	construct(int unitID)
		this.unitID = unitID

class BossWaves
	int bossMin
	int bossMax

	construct(int bossMin, int bossMax)
		this.bossMin = bossMin
		this.bossMax = bossMax

function wavesSetup()
	for int i = 1 to 20
		wavesList.add(new Waves(WAVE_MOB[i]))
		bossWaveList.add(new BossWaves(calc_miniBossLower(i), calc_miniBossHigher(i)))
	for int i = 1 to 4
		bigBossWaveList.add(new BossWaves(calc_lowerBigBoss(i), calc_higherBigBoss(i)))
	


function continueUnitStats(integer uId) returns string
	return "|r\n|c00aa3101Physical Pen: " + (uId.getPhysPenetration() * 100).toString() + "%|r\n|c003228ffMagical Resistance: " + (uId.getMagicResist() * 100).toString() + "%|r\n"

function unit.unitStats(int whichSide)
	let uId = this.getTypeId()
	switch whichSide
		case 1
			printTimed("Left Side Boss" + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		case 2
			printTimed("Middle Boss " + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		case 3
			printTimed("Right Side Boss " + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		case 4
			printTimed("|c00c90c0c!!!WARNING!!!|r\nBig Boss " + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)
		default
			printTimed("Wave: " + externalWaveCount.toString() + "\n|c00ffff00Unit: " + this.getName() + continueUnitStats(uId), 5)

function spawnWavesNow()
	if(internalWaveCount == 1)
		let temp = createUnit(wavesList.get(externalWaveCount).unitID)
		temp.unitStats(0)
		temp.remove()

	doPeriodicallyCounted(0.2, 12) (CallbackCounted cb) ->
		createUnit(Player(11), wavesList.get(externalWaveCount).unitID, gg_rct_LeftSpawn.randomPoint(), bj_UNIT_FACING.asAngleDegrees()).issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
		
		createUnit(Player(12), wavesList.get(externalWaveCount).unitID, gg_rct_MiddleSpawn.randomPoint(), bj_UNIT_FACING.asAngleDegrees()).issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove1.randomPoint())

		createUnit(Player(13), wavesList.get(externalWaveCount).unitID, gg_rct_RightSpawn.randomPoint(), bj_UNIT_FACING.asAngleDegrees()).issuePointOrderById(Orders.attack, gg_rct_RightSpawnMove1.randomPoint())

	if internalWaveCount == 3
		doAfter(2.5) ->
			let mini_lower = bossWaveList.get(externalWaveCount).bossMin
			let mini_higher = bossWaveList.get(externalWaveCount).bossMax
			createUnit(Player(11), WAVE_BOSS[GetRandomInt(mini_lower, mini_higher)], gg_rct_LeftSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(1)
			..minibossDeath()

			createUnit(Player(12), WAVE_BOSS[GetRandomInt(mini_lower, mini_higher)], gg_rct_MiddleSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(2)
			..minibossDeath()

			createUnit(Player(13), WAVE_BOSS[GetRandomInt(mini_lower, mini_higher)], gg_rct_RightSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
			..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
			..unitStats(3)
			..minibossDeath()

			if (externalWaveCount-1) % 5 == 0
				doAfter(2.5) -> 
					internalBigBossCount = internalBigBossCount + 1
					let big_lower = bigBossWaveList.get(((internalBigBossCount)*0.25).toInt()).bossMin
					let big_higher = bigBossWaveList.get(((internalBigBossCount)*0.25).toInt()).bossMax
					if externalWaveCount == 21
						waveHeroSetup()
					createUnit(Player(11), WAVE_BOSS[GetRandomInt(big_lower, big_higher)], gg_rct_MiddleSpawn.getCenter(), bj_UNIT_FACING.asAngleDegrees())
					..issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())
					..unitStats(4)
					..minibossDeath()

function unit.minibossDeath()
	EventListener.add(this, EVENT_PLAYER_UNIT_DEATH) -> 
		dropMyItemsMinibosses(this)

function moveUnitsCond() returns boolean
	return GetOwningPlayer(GetEnteringUnit()) == Player(11) or GetOwningPlayer(GetEnteringUnit()) == Player(12) or GetOwningPlayer(GetEnteringUnit()) == Player(13)

function waveSetupTimerElapsed()
	if externalWaveCount == 21
		DoNothing()
	else
		if internalWaveCount == 3
			externalWaveCount = externalWaveCount + 1
			internalWaveCount = 1
			graceWaveSpawnCb = doAfter(50) ->
				waveSetupTimerElapsed()
				spawnWavesNow()
		else
			internalWaveCount = internalWaveCount + 1
			graceWaveSpawnCb = doAfter(20) -> 
				waveSetupTimerElapsed()
				spawnWavesNow()
		titleString = "Wave "+externalWaveCount.toString()+" — ("+internalWaveCount.toString()+"/3)"

public function waveSetup()

	moveUnit()
	moveUnit2()
	waveSetupTimerElapsed()
	spawnWavesNow()

function moveUnit()
	CreateTrigger()
	..registerRectEnterEventSource(gg_rct_LeftSpawnMove1)
	..registerRectEnterEventSource(gg_rct_RightSpawnMove1)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove1.randomPoint())

function moveUnit2()
	CreateTrigger()
	..registerRectEnterEventSource(gg_rct_AllSpawnMove1)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove2.randomPoint())

public function preWaveSetup()
	wavesSetup()
	titleString = "Preparation Phase "
	graceWaveSpawnCb = doAfter(80) -> 
		waveSetup()

	CreateTrigger()..registerRectEnterEventSource(gg_rct_LeftSpawn)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_LeftSpawnMove1.randomPoint())

	CreateTrigger()..registerRectEnterEventSource(gg_rct_RightSpawn)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_RightSpawnMove1.randomPoint())

	CreateTrigger()..registerRectEnterEventSource(gg_rct_MiddleSpawn)
	..addCondition(Condition(function moveUnitsCond))
	..addAction() ->
		GetEnteringUnit().issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove1.randomPoint())