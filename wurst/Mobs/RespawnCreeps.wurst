package RespawnCreeps
import MyUnitIds
import ClosureTimers
import Global_Variables
import ItemDrops
import ClosureEvents
import HashMap
let creepSettings = new HashMap<player,int>
let currentCreep = new HashMap<player,unit>
let creepRespawns = new HashMap<int,real>
player hostile = players[PLAYER_NEUTRAL_AGGRESSIVE]
unit array leftCreep = []
unit array eliteCreep = []
unit array bossCreep = []
unit array overlord = []
unit array dryad = []
real facing = 270
real facingUp = 90
integer frostyCounter = 0
init
    creepRespawner()

public function player.setCreepSettings(int unitId, vec2 pos)
    creepSettings.put(this, unitId)
    if currentCreep.has(this)
        currentCreep.get(this).remove()
        currentCreep.put(this, createUnit(hostile, unitId, pos))
    else
        currentCreep.put(this, createUnit(hostile, unitId, pos))

function creepRespawner()
    EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
        let u = GetDyingUnit()
        let p = GetKillingUnit().getOwner()
        if currentCreep.get(p) == u
            u.dropItems()
            let pos = u.getPos()
            doAfter(creepRespawns.get(u.getTypeId())) -> 
                currentCreep.put(p, createUnit(hostile, u.getTypeId(), pos, u.getFacingAngle()))
        else
            if u.isIllusion()
                skip
            else
                let uid = u.getTypeId()
                if creepRespawns.has(uid)
                    let pos = u.getPos()
                    if uid == ELITE_CREEP[9]
                        frostyCounter++
                    doAfter(creepRespawns.get(uid)) ->
                        createUnit(hostile, u.getTypeId(), pos, u.getFacingAngle())
                u.dropItems()
        
public function eliteSideCreepsSetup()
    
    for i = 1 to 5
        creepRespawns.put(ELITE_CREEP[i], 5)
        createUnit(hostile, ELITE_CREEP[i], eliteLoc[i].getCenter(), facingUp.asAngleDegrees())
        
    for i = 6 to 10
        if i == 6 or i == 7
            creepRespawns.put(ELITE_CREEP[i], 1)
        if i == 8 or i == 10
            creepRespawns.put(ELITE_CREEP[i], 10)
        if i == 9
            creepRespawns.put(ELITE_CREEP[i], 30)
                
        createUnit(hostile, ELITE_CREEP[i], eliteLoc[i].getCenter(), facing.asAngleDegrees())

function dragonCreep(unit u)
    EventListener.add(u, EVENT_PLAYER_UNIT_DEATH) -> 
        let u1 = GetDyingUnit()
        doAfter(30) ->
            for i = 1 to 7
                if u1 == bossCreep[i]
                    bossCreep[i+1] = createUnit(hostile, (BOSS_CREEP[i+1]), bossLoc[1].getCenter(), facing.asAngleDegrees())
                    dragonCreep(bossCreep[i+1])
        u1.dropItems()
                    
function seaCreep(unit u)
    EventListener.add(u, EVENT_PLAYER_UNIT_DEATH) -> 
        let u1 = GetDyingUnit()
        doAfter(30) ->
            for i = 9 to 11
                if u1 == bossCreep[i]
                    bossCreep[i+1] = createUnit(hostile, (BOSS_CREEP[i+1]), bossLoc[2].getCenter(), facing.asAngleDegrees())
                    seaCreep(bossCreep[i+1])
        u1.dropItems()

function dreadlordCreep(unit u)
    EventListener.add(u, EVENT_PLAYER_UNIT_DEATH) -> 
        let u1 = GetDyingUnit()
        doAfter(30) ->
            if u1 == bossCreep[13]
                bossCreep[14] = createUnit(hostile, (BOSS_CREEP[14]), bossLoc[4].getCenter(), facing.asAngleDegrees())
                bossCreep[14].setLevel(80, false)
                bossCreep[14].suspendXp(true)
                dreadlordCreep(bossCreep[14])
        u1.dropItems()

function towerCreep(unit u)
    EventListener.add(u, EVENT_PLAYER_UNIT_DEATH) -> 
        let u1 = GetDyingUnit()
        doAfter(30) ->
            for i = 15 to 21
                if u1 == bossCreep[i]
                    bossCreep[i+1] = createUnit(hostile, (BOSS_CREEP[i+1]), bossLoc[3].getCenter(), facing.asAngleDegrees())
                    towerCreep(bossCreep[i+1])
        u1.dropItems()

public function bossCreepSetup()
    bossCreep[1] = createUnit(hostile, BOSS_CREEP[1], bossLoc[1].getCenter(), facing.asAngleDegrees()) // Dragon
    dragonCreep(bossCreep[1])
    bossCreep[9] = createUnit(hostile, BOSS_CREEP[9], bossLoc[2].getCenter(), facing.asAngleDegrees()) // Sea
    seaCreep(bossCreep[9])
    bossCreep[13] = createUnit(hostile, BOSS_CREEP[13], bossLoc[4].getCenter(), facing.asAngleDegrees()) // Dreadlord
    bossCreep[13].setLevel(80, false)
    bossCreep[13].suspendXp(true)
    dreadlordCreep(bossCreep[13])
    bossCreep[15] = createUnit(hostile, BOSS_CREEP[15], bossLoc[3].getCenter(), facing.asAngleDegrees()) // Tower
    towerCreep(bossCreep[15])
    
function overdryaCreep(unit u)
    EventListener.add(u, EVENT_PLAYER_UNIT_DEATH) ->
        let u1 = GetDyingUnit()
        let pos = u1.getPos()
        doAfter(5) -> 
            for i = 1 to 10
                if u1 == overlord[i]
                    overlord[i] = createUnit(hostile, OVERDRYA_CREEP[2], pos, u1.getFacingAngle())
                    overdryaCreep(overlord[i])
                else if u1 == dryad[i]
                    dryad[i] = createUnit(hostile, OVERDRYA_CREEP[1], pos, u1.getFacingAngle())
                    overdryaCreep(dryad[i])

public function overdryaSetup()
    for i = 1 to 10
        overlord[i] = createUnit(hostile, OVERDRYA_CREEP[2], gg_rct_OverlordArea.randomPoint(), facing.asAngleDegrees())
        overdryaCreep(overlord[i])
        dryad[i] = createUnit(hostile, OVERDRYA_CREEP[1], gg_rct_DryadArea.randomPoint(), facing.asAngleDegrees())
        overdryaCreep(dryad[i])