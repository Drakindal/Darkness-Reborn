package WaveHeroSetup

import MyUnitIds
import Orders
import ClosureTimers
import HashMap
import MyItemIds
import GameEnd
import MyAbilityIds
import codeDamageTypings
import Global_Variables
import ShadowInferno
import ArmorLimiter
import BigBoom
import MultiboardTimer
import HashSet

int waveHeroIndex = 0 // originally 0
unit waveHero = null
unit waveHeroNext = null
real facing = 270
constant boostMap = new HashMap<int,WaveBoost>

let wasAttackedHero = new HashMap<unit,boolean>
let hasBeenAttackedSince = new HashMap<unit,boolean>
let waveHeroes = new HashSet<unit>

init

    boostUnit()
    preloadWaveHeroes()

public function unit.wasAttacked()
    if(waveHeroes.has(this))
        wasAttackedHero.put(this, true)
        hasBeenAttackedSince.put(this, true)

function unit.moveWithoutCombat()
    doAfter(20) ->
        if(this.isAlive() == false)
            bossKills++
        else
            if(hasBeenAttackedSince.has(this))
                if(wasAttackedHero.has(this))
                    this.moveWithoutCombat()
                    wasAttackedHero.put(this, false)
                else
                    notAttacked(this)
            else
                this.moveWithoutCombat()

function notAttacked(unit u)
    hasBeenAttackedSince.put(u, false)
    u.issueTargetOrderById(Orders.attack, elementalSoul)
    u.moveWithoutCombat()

interface WaveBoost
    function boost(unit u)

function boostUnit()

    boostMap.put(WAVE_HERO_7) (u) -> // Death King
        u
        ..setLevel(50, false)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 0)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 1)
        ..enumerateMagicResistance(60)
        ..enumeratePhysicalPenetration(20)
        
    boostMap.put(WAVE_HERO_8) (u) -> // Jacksmith
        u
        ..setStr(35000)
        ..setAgi(10000)
        ..setInt(35000)
        ..setLevel(150, false)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..enumeratePhysicalPenetration(10)

    boostMap.put(WAVE_HERO_9) (u) -> // Beastmaster (N02A)
        u
        ..setStr(50000)
        ..setAgi(20000)
        ..setInt(20000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..enumeratePhysicalPenetration(10)
        
    boostMap.put(WAVE_HERO_10) (u) -> // Satyr
        u
        ..setStr(90000)
        ..setAgi(25000)
        ..setInt(10000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility('A0RF', 9)
        ..addAbility('A0RV', 9)
        ..addAbility('A0RG', 9)
        ..addAbility('A0RE', 9)
        ..addAbility('A01K', 4)
        ..enumeratePhysicalPenetration(10)

    boostMap.put(WAVE_HERO_11) (u) -> // Warden
        u
        ..setStr(80000)
        ..setAgi(35000)
        ..setInt(10000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility('A0D8', 9)
        ..addAbility('A00R', 9)
        ..addAbility('A00T', 9)
        ..enumeratePhysicalPenetration(30)

    boostMap.put(WAVE_HERO_12) (u) -> // Blademaster
        u
        ..setStr(100000)
        ..setAgi(40000)
        ..setInt(15000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility(CREEP_ABILITY_8, 1)
        ..addAbility('A07N', 9)
        ..enumeratePhysicalPenetration(15)

    boostMap.put(WAVE_HERO_13) (u) -> // Tauren Chieftain
        u
        ..setStr(50000)
        ..setAgi(50000)
        ..setInt(20000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility('A00V', 9)
        ..addAbility('A0CI', 9)
        ..addAbility('A01B', 9)
        ..addAbility('A01E', 9)
        ..addAbility('A01A', 4)
        ..enumeratePhysicalPenetration(30)

    boostMap.put(WAVE_HERO_14) (u) -> // Wolfman
        u
        ..setStr(70000)
        ..setAgi(50000)
        ..setInt(25000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility('A0M0', 9)
        ..addAbility('A0S9', 9)
        ..addAbility('A0SE', 9)
        ..addAbility('A0SD', 4)
        ..addAbility('A0SA', 4)
        ..enumeratePhysicalPenetration(10)

    boostMap.put(WAVE_HERO_15) (u) -> // Mountain King
        u
        ..setStr(75000)
        ..setAgi(40000)
        ..setInt(30000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility(CREEP_ABILITY_7, 9)
        ..addAbility('A0DW', 9)
        ..addAbility('A0DZ', 4)
        ..enumeratePhysicalPenetration(10)

    boostMap.put(WAVE_HERO_16) (u) -> // Dark Ranger
        u
        ..setStr(35000)
        ..setAgi(15000)
        ..setInt(20000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility(CREEP_ABILITY_7, 1)
        ..addAbility(DARKRANGER_ABIL_2, 9)
        ..addAbility(DARKRANGER_ABIL_3, 9)
        ..issueImmediateOrder(OrderIds.flamingarrows.toString())

    boostMap.put(WAVE_HERO_17) (u) -> // Dreadlord
        u
        ..setStr(111000)
        ..setAgi(60000)
        ..setInt(45000)
        ..setLevel(150, false)
        ..setScale(1.5)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_BERSERKERS_SHIELD, 3)
        ..addItemToSlot(ITEM_BERSERKERS_GLOVES, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility('A0R4', 9)
        ..addAbility('A0R7', 9)
        ..addAbility('A0R5', 9)
        ..addAbility('A0R6', 4)
        ..addAbility('A0RD', 4)
        ..enumeratePhysicalPenetration(20)

    boostMap.put(WAVE_HERO_18) (u) -> // Pit Lord
        u
        ..setStr(55000)
        ..setAgi(50000)
        ..setInt(50000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_APOLLOS_HELM, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility(CREEP_ABILITY_7, 1)
        ..addAbility('A0RS', 9)
        ..addAbility('A0RL', 9)
        ..addAbility('A0RI', 9)
        ..enumeratePhysicalPenetration(15)

    boostMap.put(WAVE_HERO_19) (u) -> // Ranger
        u
        ..setStr(80000)
        ..setAgi(60000)
        ..setInt(55000)
        ..setLevel(150, false)
        ..setScale(1.5)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_CRYSTAL_MOON, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility(CREEP_ABILITY_7, 1)
        ..addAbility('A0AO', 9)
        ..addAbility('A0F0', 9)
        ..addAbility('A0CH', 9)
        ..addAbility('A0AP', 9)
        ..addAbility('A0F1', 4)
        ..issueImmediateOrder(OrderIds.poisonarrows.toString())

    boostMap.put(WAVE_HERO_20) (u) -> // Demon Hunter
        u
        ..setStr(80000)
        ..setAgi(80000)
        ..setInt(80000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_CRYSTAL_MOON, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..addAbility(CREEP_ABILITY_7, 1)
        ..addAbility('A0RW', 9)
        ..addAbility('A0TK', 9)
        ..addAbility('A008', 9)
        ..enumeratePhysicalPenetration(15)

    boostMap.put(WAVE_HERO_21) (u) -> // Shodow Hunter
        u
        ..setStr(100000)
        ..setAgi(100000)
        ..setInt(100000)
        ..setLevel(150, false)
        ..setScale(1.5)
        ..addItemToSlot(ITEM_CRYSTAL_ARMOR, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_APOLLOS_HELM, 4)
        ..addItemToSlot(ITEM_ANGEL_MACE, 5)
        ..addAbility('A0M9', 9)
        ..addAbility('A0M3', 9)
        ..addAbility('A0MI', 4)

    boostMap.put(WAVE_HERO_22) (u) -> // Assasin
        u
        ..setStr(70000)
        ..setAgi(70000)
        ..setInt(120000)
        ..setLevel(150, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_AVATAR_ARMOR, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_PERFECT_EMERALD, 4)
        ..addItemToSlot(ITEM_CRYSTAL_KNIFE, 5)
        ..addAbility('A0DA', 9)
        ..addAbility('A0DC', 9)
        ..addAbility('A0GM', 9)
        ..addAbility('A0GJ', 4)
        ..enumeratePhysicalPenetration(15)

    boostMap.put(WAVE_HERO_23) (u) -> // Priestess of the Moon
        u
        ..setStr(100000)
        ..setAgi(60000)
        ..setInt(120000)
        ..setLevel(150, false)
        ..setScale(1.5)
        ..addItemToSlot(ITEM_VALKYRIE, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_PERFECT_EMERALD, 4)
        ..addItemToSlot(ITEM_RAIN_SWORD_L5, 5)
        ..addAbility('A08A', 9)
        ..addAbility('A087', 9)
        ..addAbility('A08C', 9)

    boostMap.put(WAVE_HERO_24) (u) -> // Naga Sea Witch
        u
        ..setStr(100000)
        ..setAgi(200000)
        ..setInt(120000)
        ..setLevel(150, false)
        ..setScale(1.5)
        ..addItemToSlot(ITEM_BERSERKERS_STAFF, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_PERFECT_EMERALD, 4)
        ..addItemToSlot(ITEM_VAMPIRELLA_L5, 5)
        ..addAbility('A000', 9)
        ..addAbility('A0AI', 9)
        ..addAbility('A0AN', 4)

    boostMap.put(WAVE_HERO_25) (u) -> // Time Wizard
        u
        ..setStr(150000)
        ..setAgi(200000)
        ..setInt(150000)
        ..setLevel(150, false)
        ..setScale(1.5)
        ..addItemToSlot(ITEM_BERSERKERS_STAFF, 0)
        ..addItemToSlot(ITEM_BERSERKERS_HELM, 1)
        ..enumerateMagicResistance(80)
        ..addItemToSlot(ITEM_BERSERKERS_ARMOR, 2)
        ..addItemToSlot(ITEM_LANCELOT_SET, 3)
        ..addItemToSlot(ITEM_PERFECT_EMERALD, 4)
        ..addItemToSlot(ITEM_O_CLOCK, 5)
        ..addAbility('A0K5', 4)
        ..addAbility('A0ND', 4)
        ..addAbility('A0N4', 4)

    boostMap.put(WAVE_HERO_26) (u) -> // Death Eyes
        u
        ..setStr(180000)
        ..setAgi(95000)
        ..setInt(10000)
        ..setLevel(70, false)
        ..setScale(2)
        ..addItemToSlot(ITEM_STRIKE_AXE, 0)
        ..addItemToSlot(ITEM_ANGEL_MACE, 1)
        ..addItemToSlot(ITEM_MENELAUS, 2)
        ..addItemToSlot(ITEM_SOUL_BLAME, 3)
        ..addItemToSlot(ITEM_ODIN_NECKLE, 4)
        ..addItemToSlot(ITEM_BERSERKERS_BOOTS, 5)
        ..enumeratePhysicalPenetration(15)
        ..enumerateMagicResistance(90)

function preloadWaveHeroes()
    for i = 1 to 30
        let u = createUnit(Player(11), WAVE_HERO[i], gg_rct_MiddleSpawn.getCenter(), facing.asAngleDegrees())
        let unitID = GetUnitTypeId(u)
        if boostMap.has(unitID)
            boostMap.get(unitID).boost(u)
        RemoveUnit(u)

function waveHeroSpawn()

    waveHeroIndex = waveHeroIndex + 1
    waveHero = createUnit(Player(11), WAVE_HERO[waveHeroIndex], gg_rct_MiddleSpawn.getCenter(), facing.asAngleDegrees())
    waveHero.issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove2.getCenter())
    waveHeroDeath()
    let unitID = GetUnitTypeId(waveHero)
    if boostMap.has(unitID)
        boostMap.get(unitID).boost(waveHero)
    if WAVE_HERO_5 != unitID
        waveHero.moveWithoutCombat()
    if WAVE_HERO_5 == unitID
        explode(waveHero)
    if WAVE_HERO_29 == unitID
        shadowInfernoAttacked(waveHero)
    waveHero.limitArmorImmediate()

function waveHeroDeath()
    CreateTrigger()..registerUnitEvent(waveHero, EVENT_UNIT_DEATH)..addAction() ->
        let u = GetUnitTypeId(GetDyingUnit())

        if u == WAVE_HERO_7
            CreateItemLoc(ITEM_HOLY_GOLD_SHIELD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_8
            CreateItemLoc(ITEM_HOLY_ARMOR,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_9
            CreateItemLoc(ITEM_BEASTMASTER_CARD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_10
            CreateItemLoc(ITEM_SOUL_BLAME,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_11
            CreateItemLoc(ITEM_WARDEN_CARD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_12
            CreateItemLoc(ITEM_BLADEMASTER_CARD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_13
            CreateItemLoc(ITEM_TAUREN_CARD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_14
            CreateItemLoc(ITEM_DESTROY_SWORD,GetUnitLoc(GetDyingUnit()))
            CreateItemLoc(ITEM_STRIKE_AXE,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_15
            CreateItemLoc(ITEM_MOUNTAIN_KING_CARD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_16
            CreateItemLoc(ITEM_TITANIUM,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_17
            CreateItemLoc(ITEM_SCOURGE_BONE_CHIMES,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_18
            CreateItemLoc(ITEM_PITLORD_CARD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_19
            CreateItemLoc(ITEM_SPHERE_OF_CHAOS,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_20
            CreateItemLoc(ITEM_CRYSTAL_DUAL_SWORD,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_21
            CreateItemLoc(ITEM_LANCELOT_SET,GetUnitLoc(GetDyingUnit()))
        else if u == WAVE_HERO_29
            let final = createUnit(Player(11), FINAL_BOSS, gg_rct_MiddleSpawn.getCenter(), facing.asAngleDegrees())
            final.setStr(300000)
            final.setAgi(300000)
            final.setInt(300000)
            final.setLevel(199, false)
            final.addAbility('A00W', 1)
            final.addAbility('A0ZA', 4)
            final..enumerateMagicResistance(90).enumeratePhysicalPenetration(25)
            final.issueImmediateOrder("thunderclap")
            final.issuePointOrderById(Orders.attack, gg_rct_AllSpawnMove2.randomPoint())
            onVictorySetup(final)

function waveHeroTimerElapsed()
    if waveHeroIndex < 30
        titleString = GetObjectName(WAVE_HERO[waveHeroIndex+1])
        graceWaveSpawnCb = doAfter(60) ->
            waveHeroSpawn()
            waveHeroTimerElapsed()
            graceWaveSpawnCb = null
    else
        DoNothing()

public function waveHeroSetup()
    graceWaveSpawnCb = doAfter(60) -> 
        waveHeroTimerElapsed()
        waveHeroSpawn()
    titleString = "Dragon - Ysera "