package Global_Variables

import DamageEvent
import HashMap
import MyUnitIds
import MyUpgradesIds

public rect array creepLoc = []
public rect array eliteLoc = []
public rect array bossLoc = []

class UpgradeHeroBool
    int upgradeID
    bool active

    construct(int upgradeID)
        this.upgradeID = upgradeID
        active = false

public let heroPickedUpgradeHash = new HashMap<int, UpgradeHeroBool>

public int gameMode = -1

public let playerHero = new HashMap<player,unit>

public unit elementalSoul

public boolean randomRepick = true

public let healthDifficultyModifier = [0.5,0.75,1,2,4]
public let armorDifficultyModifier = [0.5,0.75,1,1.5,2]

public constant DAMAGE_EVENT_PRIO_START     = 0 // Abort damage at this priority
public constant DAMAGE_EVENT_PRIO_RELATIVE  = 1 // Apply relative changes (multiplication and division)
public constant DAMAGE_EVENT_PRIO_ABSOLUTE  = 2 // Apply absolute changes (addition and subtraction)
public constant DAMAGE_EVENT_PRIO_SHIELD    = 4 // Apply reduction from "shield" effects
public constant DAMAGE_EVENT_PRIO_FINAL     = 5 // Final damage (won't be changed at this stage)
public constant DAMAGE_ELEMENT_FIRE  = new DamageElement("Fire", colorA(255, 0, 0, 255)) // Primarily used for Firelord (may be used for others)
public int bossKills = 0
public unit dropSite

init

    creepLoc[1] = gg_rct_LeftCreepSpawn1
    creepLoc[2] = gg_rct_LeftCreepSpawn2
    creepLoc[3] = gg_rct_LeftCreepSpawn3
    creepLoc[4] = gg_rct_LeftCreepSpawn4
    creepLoc[5] = gg_rct_LeftCreepSpawn5
    creepLoc[6] = gg_rct_LeftCreepSpawn6
    creepLoc[7] = gg_rct_LeftCreepSpawn7
    creepLoc[8] = gg_rct_LeftCreepSpawn8
    creepLoc[9] = gg_rct_LeftCreepSpawn9
    creepLoc[10] = gg_rct_LeftCreepSpawn10

    eliteLoc[1] = gg_rct_EliteSpawn1
    eliteLoc[2] = gg_rct_EliteSpawn2
    eliteLoc[3] = gg_rct_EliteSpawn3
    eliteLoc[4] = gg_rct_EliteSpawn4
    eliteLoc[5] = gg_rct_EliteSpawn5
    eliteLoc[6] = gg_rct_EliteSpawn6
    eliteLoc[7] = gg_rct_EliteSpawn7
    eliteLoc[8] = gg_rct_EliteSpawn8
    eliteLoc[9] = gg_rct_EliteSpawn9
    eliteLoc[10] = gg_rct_EliteSpawn10

    bossLoc[1] = gg_rct_DragonSpawn
    bossLoc[2] = gg_rct_ElementalSpawn
    bossLoc[3] = gg_rct_TowerSpawn
    bossLoc[4] = gg_rct_DreadlordSpawn


    heroPickedUpgradeHash.put(HERO_MOUNTAIN_KING, new UpgradeHeroBool(HERO_MOUNTAIN_KING_PICKED))
    heroPickedUpgradeHash.put(HERO_WOLFMAN_INITIAL, new UpgradeHeroBool(HERO_WOLFMAN_INITIAL_PICKED))
    heroPickedUpgradeHash.put(HERO_TAUREN_CHIEFTAIN, new UpgradeHeroBool(HERO_TAUREN_CHIEFTAIN_PICKED))
    heroPickedUpgradeHash.put(HERO_VIVPIRE, new UpgradeHeroBool(HERO_VIVPIRE_PICKED))
    heroPickedUpgradeHash.put(HERO_DEATH_KNIGHT, new UpgradeHeroBool(HERO_DEATH_KNIGHT_PICKED))
    heroPickedUpgradeHash.put(HERO_BEASTMASTER, new UpgradeHeroBool(HERO_BEASTMASTER_PICKED))
    heroPickedUpgradeHash.put(HERO_PITLORD, new UpgradeHeroBool(HERO_PITLORD_PICKED))
    heroPickedUpgradeHash.put(HERO_JACKSMITH, new UpgradeHeroBool(HERO_JACKSMITH_PICKED))
    heroPickedUpgradeHash.put(HERO_UTHER, new UpgradeHeroBool(HERO_UTHER_PICKED))
    heroPickedUpgradeHash.put(HERO_PRIESTESS_OF_THE_MOON, new UpgradeHeroBool(HERO_PRIESTESS_OF_THE_MOON_PICKED))
    heroPickedUpgradeHash.put(HERO_ASSASSIN, new UpgradeHeroBool(HERO_ASSASSIN_PICKED))
    heroPickedUpgradeHash.put(HERO_DEMON_HUNTER, new UpgradeHeroBool(HERO_DEMON_HUNTER_PICKED))
    heroPickedUpgradeHash.put(HERO_SHADOW_OF_VENGEANCE, new UpgradeHeroBool(HERO_SHADOW_OF_VENGEANCE_PICKED))
    heroPickedUpgradeHash.put(HERO_WARDEN, new UpgradeHeroBool(HERO_WARDEN_PICKED))
    heroPickedUpgradeHash.put(HERO_BLADEMASTER, new UpgradeHeroBool(HERO_BLADEMASTER_PICKED))
    heroPickedUpgradeHash.put(HERO_SATYR, new UpgradeHeroBool(HERO_SATYR_PICKED))
    heroPickedUpgradeHash.put(HERO_DARK_RANGER, new UpgradeHeroBool(HERO_DARK_RANGER_PICKED))
    heroPickedUpgradeHash.put(HERO_ILLUSIONIST, new UpgradeHeroBool(HERO_ILLUSIONIST_PICKED))
    heroPickedUpgradeHash.put(HERO_RANGER, new UpgradeHeroBool(HERO_RANGER_PICKED))
    heroPickedUpgradeHash.put(HERO_FIRELORD, new UpgradeHeroBool(HERO_FIRELORD_PICKED))
    heroPickedUpgradeHash.put(HERO_KEEPER_OF_THE_GROVE, new UpgradeHeroBool(HERO_KEEPER_OF_THE_GROVE_PICKED))
    heroPickedUpgradeHash.put(HERO_FIRE_MAGE, new UpgradeHeroBool(HERO_FIRE_MAGE_PICKED))
    heroPickedUpgradeHash.put(HERO_HERALD_OF_LIGHTNING, new UpgradeHeroBool(HERO_HERALD_OF_LIGHTNING_PICKED))
    heroPickedUpgradeHash.put(HERO_SHADOW_HUNTER, new UpgradeHeroBool(HERO_SHADOW_HUNTER_PICKED))
    heroPickedUpgradeHash.put(HERO_LICH, new UpgradeHeroBool(HERO_LICH_PICKED))
    heroPickedUpgradeHash.put(HERO_NAGA_SEA_WITCH, new UpgradeHeroBool(HERO_NAGA_SEA_WITCH_PICKED))
    heroPickedUpgradeHash.put(HERO_TINKER, new UpgradeHeroBool(HERO_TINKER_PICKED))
    heroPickedUpgradeHash.put(HERO_GUARDIAN_OF_LIGHT, new UpgradeHeroBool(HERO_GUARDIAN_OF_LIGHT_PICKED))
    heroPickedUpgradeHash.put(HERO_ARCHMAGE, new UpgradeHeroBool(HERO_ARCHMAGE_PICKED))
    heroPickedUpgradeHash.put(HERO_TIME_WIZARD, new UpgradeHeroBool(HERO_TIME_WIZARD_PICKED))
    heroPickedUpgradeHash.put(HERO_TRACKER, new UpgradeHeroBool(HERO_TRACKER_PICKED))
    heroPickedUpgradeHash.put(HERO_THIEF, new UpgradeHeroBool(HERO_THIEF_PICKED))
    heroPickedUpgradeHash.put(HERO_PANDAREN_MONK, new UpgradeHeroBool(HERO_PANDAREN_MONK_PICKED))
    heroPickedUpgradeHash.put(HERO_KING_OF_LOAS, new UpgradeHeroBool(HERO_KING_OF_LOAS_PICKED))
    heroPickedUpgradeHash.put(HERO_ARTHAS, new UpgradeHeroBool(HERO_ARTHAS_PICKED))