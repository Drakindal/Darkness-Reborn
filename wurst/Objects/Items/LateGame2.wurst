package LateGame2

import MyItemDefinition
import ItemObjEditing
import MyItemIds
import RecipeItems
import codeDamageTypings

init

@compiletime function createItems()

//I0BP
    new MyItemWithRecipeDefinition(ITEM_GOLD_AXE, itemRecipeList, ITEM_RECIPE_GOLD_AXE,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(14000)
    )
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNAxeStrike.blp")
    ..setClassification("Artifact")
    ..addStats(addDamage(700))
    ..addStats(addCrit(2, 70))
    ..addComponents(
    ITEM_BLADE_OF_HELL,
    ITEM_STEEL_AXE)
    ..addHotKey()
    ..register()

//I0CO
    new MyItemWithRecipeDefinition(ITEM_DARK_MATTER, itemRecipeList, ITEM_RECIPE_DARK_MATTER,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(10500)
    )
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNDarkMatter.blp")
    ..setClassification("Artifact")
    ..addStats(addStr(150))
    ..addStats(addHpReg(100))
    ..addStats(addAbilityPhoenixFire(2000, 1, 650))
    ..addComponents(
    ITEM_ORB_OF_DARKNESS,
    ITEM_VOID_AXE,
    ITEM_DARK_SPHERE)
    ..addHotKey()
    ..register()

//I0ED
    new MyItemWithRecipeDefinition(ITEM_LANCELOT_SHIELD, itemRecipeList, ITEM_RECIPE_LANCELOT_SHIELD,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(20000)
    )
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNLancelot_Shield.blp")
    ..setClassification("Artifact")
    ..addStats(addArmor(130))
    ..addStats(addHp(5000))
    ..addStats(addAbilityGetHpOnDamage(500, 0.3))
    ..addComponents(
    ITEM_STEEL_SHIELD,
    ITEM_SCEPTER_OF_HEALING)
    ..addHotKey()
    ..register()
    
//I0EE
    new MyItemWithRecipeDefinition(ITEM_LANCELOT_ARMOR, itemRecipeList, ITEM_RECIPE_LANCELOT_ARMOR,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(20000)
    )
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNLancelot_Plate.blp")
    ..setClassification("Artifact")
    ..addStats(addArmor(190))
    ..addStats(addHp(3000))
    ..addStats(addInt(200))
    ..addStats(addAbilityGetMpOnDamage(1, 0.2))
    ..addComponents(
    ITEM_LIGHT_ARMOR,
    ITEM_SOUL_OF_KILJEADEN,
    ITEM_CROWN_OF_SOLDIER_L0)
    ..addHotKey()
    ..register()

//I0EF
    new MyItemWithRecipeDefinition(ITEM_LANCELOT_HELM, itemRecipeList, ITEM_RECIPE_LANCELOT_HELM,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(13500)
    )
    ..setCooldownGroup("A0UB")
    ..setActivelyUsed(true)
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNLancelot_Helm.blp")
    ..setClassification("Artifact")
    ..addStats(addAbilityDealAoeDamage(10000, 600, damageType.MAGICAL, 4000, 30))
    ..addStats(addArmor(100))
    ..addStats(addHp(5000))
    ..addStats(addHpReg(50))
    ..addComponents(
    ITEM_SEER_STAFF,
    ITEM_SHINY_ARMOR)
    ..addHotKey()
    ..register()

//I0IL
    new MyItemWithRecipeDefinition(ITEM_MYSTERY_BLUE_STAFF, itemRecipeList, ITEM_RECIPE_MYSTERY_BLUE_STAFF,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(18000)
    )
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNStaff2.blp")
    ..setClassification("Artifact")
    ..setActivelyUsed(true)
    ..addStats(addAbilityDealMagicDamage(20000, 6000, 10))
    ..addStats(addInt(280))
    ..addStats(addAttackSpeed(2.4))
    ..addStats(addMpReg(2))
    ..addComponents(
    ITEM_MYSTERY_GREEN_STAFF,
    ITEM_THUNDERLIZARD_DIAMOND)
    ..addHotKey()
    ..register()

    new MyItemWithRecipeDefinition(ITEM_FREEZE_WAND, itemRecipeList, ITEM_RECIPE_FREEZE_WAND,
    (MyItemDefinitionBase itemRecipe) -> itemRecipe
    ..setGoldCost(15500)
    )
    ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNIC2.blp")
    ..setClassification("Artifact")
    ..setActivelyUsed(true)
    ..addStats(addAbilityDealMagicDamageInt2(5000, 50, 6000, 10))
    ..addStats(addInt(280))
    ..addStats(addHp(6000))
    ..addStats(addMp(6000))
    ..addComponents(
    ITEM_ICE_WAND,
    ITEM_ICE_SWORD,
    ITEM_KHADGAR_PENDANT_OF_HEALTH)
    ..addHotKey()
    ..register()