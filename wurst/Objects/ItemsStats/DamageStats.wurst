package DamageStats

import ObjectIdGenerator
import AbilityObjEditing
import CommonDescriptions
import Format
import ItemStatsDef
import ObjectIds
import ActiveAbilityDef

// ----------------------------------------------------------------------------

public function addAttackSpeed(real value) returns ItemStats
    let abilityId = ABIL_ID_GEN.next()
    let effects = realToString(100 * value, 0) + "% " + wordAttackSpeed

    new AbilityDefinitionAttackSpeedIncrease(abilityId)
    ..setAttackSpeedIncrease(1, value)

    return new ItemStats(abilityId, effects)

// ----------------------------------------------------------------------------

public function addDamage(int value) returns ItemStats
    let abilityId = ABIL_ID_GEN.next()
    let effects = intToString(value) + " " + wordDamage

    new AbilityDefinitionAttackBonus(abilityId)
    ..setAttackBonus(1, value)

    return new ItemStats(abilityId, effects)

// ----------------------------------------------------------------------------

public function addCleave(real factor, real range) returns ItemStats
    let abilityId = ABIL_ID_GEN.next()
    let effects = wordCleave.format(factor.toString(1), range.toString(0))

    new AbilityDefinitionPitLordCleavingAttack(abilityId)
    ..setDistributedDamageFactor(1, factor)
    ..setCastRange(1, range)
    
    return new ItemStats(abilityId, effects)

// ----------------------------------------------------------------------------

public function addCrit(real factor, real chance) returns ItemStats
    let abilityId = ABIL_ID_GEN.next()
    let effects = wordCrit.format(chance.toString(0), factor.toString(1))

    new AbilityDefinitionCriticalStrikecreep(abilityId)
    ..setDamageMultiplier(1, factor)
    ..setChancetoCriticalStrike(1, chance)
    
    return new ItemStats(abilityId, effects)

// ----------------------------------------------------------------------------

public function addBash(real chance, real damage, real stunDuration, real cd) returns ItemStats
    let abilityId = ABIL_ID_GEN.next()
    let effects = wordBash.format(chance.toString(0), damage.toString(), stunDuration.toString(), cd.toString())

    new AbilityDefinitionMountainKingThunderBolt(abilityId)
    ..setDamage(1, damage)
    ..setDurationHero(1, stunDuration)
    ..setDurationHero(1, stunDuration)
    // Structures cannot be bashed, but can be freezed.
    ..setTargetsAllowed(1, commaList(TargetsAllowed.enemies, TargetsAllowed.neutral, TargetsAllowed.ground, TargetsAllowed.air, TargetsAllowed.organic))
    ..setArtCaster("")
    ..setArtSpecial("")
    //..setArtTarget("")
    ..setArtCaster("")
    ..setDummyAbility()

    return addAbilityStunTargetPassive(chance, cd, effects, abilityId)

// ----------------------------------------------------------------------------