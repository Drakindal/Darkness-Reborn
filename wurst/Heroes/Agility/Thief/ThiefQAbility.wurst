package ThiefQAbility

import ClosureEvents
import HashMap
import MyUnitIds
import MyItemIds

enum dropList
    LOWER
    HIGHER
    ELITE
    BOSS
    CALL

let dropListHash = new HashMap<integer, dropList>

integer array lowerItems = [ITEM_BASIC_RING, ITEM_ARMOR_OF_SACRED, ITEM_BLOSSOM_RING, ITEM_LEATHER_BRACER, ITEM_LONELY_WOOL_BOOTS, ITEM_POISON_ORB, ITEM_ECHO_MACE, ITEM_SIMPLE_RING, ITEM_SOUL_SILK_CAPE, ITEM_STEEL_HAMMER, ITEM_SPIRIT_SWORD_L1, ITEM_KNIFE]
integer array higherItems = [ITEM_BLIND_BUBBLE_NECKLACE, ITEM_RING_OF_MEDIVH, ITEM_THIEF_SILVER_ARMOR, ITEM_SPIRIT_DAGGER, ITEM_LEATHER_GIANT_BOOTS, ITEM_KNIFE_OF_BAHAMUT, ITEM_EARTH_ORB, ITEM_GIANT_HAMMER, ITEM_INVOCATION, ITEM_GOOD_BRACER, ITEM_SUNFLOWER_RING, ITEM_BINDING_SORROW_CLOAK, ITEM_SILVER_RING]
integer array eliteItems = [ITEM_SWORD_FANG, ITEM_SWAN_SONG, ITEM_SPIRIT_MIDDLE_BLADE, ITEM_PLATE_HAMMER, ITEM_LIGHT_THUNDER_ORB, ITEM_TENDER_LEAF, ITEM_FAIR_DROP, ITEM_SWORD_ROAR, ITEM_SWORD_OF_HUNTER, ITEM_SILVER_GIANT_ARMOR,ITEM_DOOMS_GRAND_STAFF, ITEM_MENDED_DEMON_WARBOOTS, ITEM_FUSION_ORB, ITEM_DOMINION_RING, ITEM_FIREHELL_HAMMER, ITEM_HONED_WARPWOOD_GRAND_STAFF, ITEM_HAMANUS_BRACER, ITEM_ASHRUNE]

function genericLoot(unit caster)
    let itemId = lowerItems[GetRandomInt(0, 11)]
    if(caster.isAlive())
        caster.addItemById(itemId)
    else
        createItem(itemId, caster.getPos())

function higherLoot(unit caster)
    let itemId = higherItems[GetRandomInt(0, 12)]
    if(caster.isAlive())
        caster.addItemById(itemId)
    else
        createItem(itemId, caster.getPos())

function eliteLoot(unit caster)
    let itemId = eliteItems[GetRandomInt(0, 17)]
    if(caster.isAlive())
        caster.addItemById(itemId)
    else
        createItem(itemId, caster.getPos())

function bossLoot(int unitId, unit caster)
    var itemId = ITEM_HYDRAS_TREASURE
    if unitId == WAVE_BOSS_27
        itemId = ITEM_SPIDERS_TREASURE
    else if unitId == WAVE_BOSS_28
        itemId = ITEM_ABO_TREASURE
    else if unitId == WAVE_BOSS_29
        itemId = ITEM_CHIMAERAS_LIGHNING_POWER
    else if unitId == WAVE_BOSS_55
        itemId = ITEM_IRONWOOD_BRANCH
    else if unitId == WAVE_BOSS_56
        itemId = ITEM_CLOAK_OF_FLAMES
    else if unitId == WAVE_BOSS_57
        itemId = ITEM_SCORPION_POTION
    else if unitId == WAVE_BOSS_83
        itemId = ITEM_SPIKE_OF_CRYPTLORD
    else if unitId == WAVE_HERO_7
        itemId = ITEM_FROSMOUNE_L5
    if(caster.isAlive())
        caster.addItemById(itemId)
    else
        createItem(itemId, caster.getPos())

function callLoot(int unitId, unit caster)
    var itemId = ITEM_GLOVES_OF_HASTE
    if unitId == ELITE_CREEP_3
        let random = GetRandomInt(0, 8)
        if(random == 8)
            itemId = ITEM_CALL_OF_FLESH_GOLEM
        else
            itemId = ITEM_DROP[57+random]
    else if unitId == ELITE_CREEP_2
        let random = GetRandomInt(0, 10)
        if(random == 10)
            itemId = ITEM_CALL_OF_FURBOLG_URSA
        else
            itemId = ITEM_DROP[54+random]
    else if unitId == ELITE_CREEP_4
        
        let random = GetRandomInt(0, 8)
        if(random == 8)
            itemId = ITEM_CALL_OF_DOOM
        else if random < 5
            itemId = ITEM_DROP[60+random]
        else
            itemId = ITEM_DROP[61+random]
    if(caster.isAlive())
        caster.addItemById(itemId)
    else
        createItem(itemId, caster.getPos())

public function steal()
    dropListHash.put(LEFT_CREEP_0, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_1, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_2, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_3, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_4, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_5, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_6, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_7, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_8, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_9, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_10, dropList.LOWER)
    dropListHash.put(LEFT_CREEP_11, dropList.LOWER)

    dropListHash.put(LEFT_CREEP_12, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_13, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_14, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_15, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_16, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_17, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_18, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_19, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_20, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_21, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_22, dropList.HIGHER)
    dropListHash.put(LEFT_CREEP_23, dropList.HIGHER)

    dropListHash.put(ELITE_CREEP_0, dropList.ELITE)
    dropListHash.put(ELITE_CREEP_1, dropList.ELITE)

    dropListHash.put(WAVE_BOSS_26, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_27, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_28, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_29, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_55, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_56, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_57, dropList.BOSS)
    dropListHash.put(WAVE_BOSS_83, dropList.BOSS)
    dropListHash.put(WAVE_HERO_7, dropList.BOSS)

    dropListHash.put(ELITE_CREEP_2, dropList.CALL)
    dropListHash.put(ELITE_CREEP_3, dropList.CALL)
    dropListHash.put(ELITE_CREEP_4, dropList.CALL)

    EventListener.onTargetCast('A0X5') (unit caster, unit target) ->
        if(target.getHPRatio() <= 0.80)
            if(GetRandomInt(0, 100) < caster.getAbilityLevel('A0X5') * 10)
                let unitDrop = dropListHash.get(target.getTypeId())
                switch unitDrop
                    case LOWER
                        genericLoot(caster)

                    case HIGHER
                        higherLoot(caster)

                    case BOSS
                        bossLoot(target.getTypeId(), caster)

                    case CALL
                        callLoot(target.getTypeId(), caster)

                    case ELITE
                        eliteLoot(caster)

                    default
                        genericLoot(caster)
            else
                CreateTextTag()..setText("Miss!", 5)
                ..setColor(255, 128, 128, 255)
                ..setPos(caster.getPos3Real())
                ..setVelocity(GetRandomReal(0,0.005), GetRandomReal(0,0.02))
                ..setLifespan(5)
                ..setPermanent(false)
                ..setVisibility(true)