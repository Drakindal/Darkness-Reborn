package DarkRanger_Q

import MyUnitIds
import MyAbilityIds
import ClosureEvents
import OrderIds
import Abilities
import DamageTarget
import Projectile

public function imageArrow()
    EventListener.onTargetCast(DARKRANGER_ABILITY_1) (unit caster, unit target) ->
        let lvl = caster.getAbilityLevel(DARKRANGER_ABILITY_1)
        let angle = caster.getPos().angleTo(target.getPos())
        for int i = 1 to 3
            let polarProj = caster.getPos().polarOffset(angle.op_plus(225.0.asAngleRadians()), -200.*i)
            let archer = createUnit(caster.getOwner(), DUMMY_UNIT_1, polarProj, angle)
            let sfx = addEffect(Abilities.moonPriestessMissile, archer.getPos())
            archer..setTimedLife(1.0)
            ..issueImmediateOrderById(OrderIds.thunderbolt)
            ..setVertexColor(100, 100, 100, 60)
            ..addAbility(DARKRANGER_DUMMYABIL_1)
            ..setAbilityLevel(DARKRANGER_DUMMYABIL_1, lvl)
            let proj = new Projectile(target, sfx, 2)
            proj.moveForward(false) (effect detectionUnit, unit target) ->
                let damage = caster.getAgi(true) * 0.6 * lvl
                caster.damageTargetCode(damage, target, null, -1, damageType.Magical)

        for int i = 1 to 3
            let polarProj = caster.getPos().polarOffset(angle.op_minus(225.0.asAngleRadians()), -200.*i)
            let archer = createUnit(caster.getOwner(), DUMMY_UNIT_1, polarProj, angle)
            let sfx = addEffect(Abilities.moonPriestessMissile, archer.getPos())
            archer..setTimedLife(1.0)
            ..issueImmediateOrderById(OrderIds.thunderbolt)
            ..setVertexColor(100, 100, 100, 60)
            ..addAbility(DARKRANGER_DUMMYABIL_1)
            ..setAbilityLevel(DARKRANGER_DUMMYABIL_1, lvl)
            let proj = new Projectile(target, sfx, 2)
            proj.moveForward(false) (effect detectionUnit, unit target) ->
                let damage = caster.getAgi(true) * 0.6 * lvl
                caster.damageTargetCode(damage, target, null, -1, damageType.Magical)