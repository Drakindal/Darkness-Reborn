package A01S_R

import Abilities
import ClosureEvents
import MyBuffIds
import Global_Variables
import DummyCaster
import MyAbilityIds
import OrderIds
import codeDamageTypings
import BouncingProjectiles
import A01O_P
real array udg_FireBallDamage = [100,200,300,500,700,1000,1300,1600,2000]
integer array udg_BounceAmount = [4,5,6,7,8,9,10,11,12]


public function fireballCast()
    EventListener.onTargetCast('A01S') (unit caster, unit target) ->
        let sfx = addEffect(Abilities.fireBallMissile, caster.getPos())..setZ(caster.getLocalZ() + 20)..setScale(1.5)
        let level = caster.getAbilityLevel('A01S')
        let bounceRange = 400.
        let closestEnemy = true
        let buffBias = BUFF_12
        let bouncingProjectile = new BouncingProjectiles(sfx, caster, target, bounceRange, closestEnemy, udg_BounceAmount[level-1], buffBias)
        bouncingProjectile.moveForward(false) (boolean explicitCheck, effect detectionUnit, unit target) ->
            let damage = udg_FireBallDamage[level-1] + level * 0.8 * caster.getInt(true)
            blaze(caster, target)
            new DummyCaster()
            ..owner(caster.getOwner())
            ..origin(sfx.getPos())
            ..castTarget(ABILITY_DUMMY_13, 1, OrderIds.cripple, target)
            flashEffect(Abilities.fireLordDeathExplode, target.getPos())
            caster.magicalDamageCodeElementId(damage, target, DAMAGE_ELEMENT_FIRE, 'blaz')
