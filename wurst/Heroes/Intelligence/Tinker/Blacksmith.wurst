package Blacksmith

import MyItemIds
import ClosureTimers
import ClosureEvents
import MyUnitIds
import LinkedList
import Recipes

public let blacksmithThiefList = compiletime(new RecipeList())

CallbackCounted countedTime

texttag timerTextTag

public function blacksmithDoAfter()
    EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
        let bs = GetTriggerUnit()
        if bs.getTypeId() == BUILDING_TINKER_BLACKSMITH
            if countedTime == null
                let itemInBs = new LinkedList<item>()
                for int i = 0 to 5
                    itemInBs.add(bs.itemInSlot(i))
                itemInBs.forEach() (item t) ->
                    if(t == null)
                        itemInBs.remove(t)
                var atSpot = blacksmithThiefList.checkRecipePosition(itemInBs) // Check if at least 1 item is upgradeable
                if atSpot > -1
                    bs.setAnimation("Work")
                    let bsPos = bs.getPos()
                    timerTextTag = createTTEx(vec3(bsPos.x, bsPos.y, 64),"20",12)
                    timerTextTag.setColor(GetPlayerColor(bs.getOwner()).toColor().withAlpha(255))
                    countedTime = doPeriodicallyCounted(1, 20) (CallbackCounted cb) ->
                        if cb.isLast()
                            countedTime = null
                            itemInBs.clear()
                            for int i = 0 to 5
                                itemInBs.add(bs.itemInSlot(i))
                            itemInBs.forEach() (item t) ->
                                if(t == null)
                                    itemInBs.remove(t)
                            
                            for int i = 0 to itemInBs.size() - 1
                                let perItem = new LinkedList<item>()
                                perItem.add(itemInBs.get(i))
                                atSpot = blacksmithThiefList.checkRecipePosition(perItem)
                                let rightList = blacksmithThiefList.get(atSpot)
                                let newite = rightList.completedItem
                                for int j = 0 to rightList.items.size() - 1
                                    bs.removeItemById(rightList.items.get(j))
                                let newitecur = bs.addItemById(newite)
                                newitecur.setPos(bs.getPos())
                                printTimed(COLOR_GOLD.toColorString()+"Blacksmith: Completed|r" + newitecur.getName(), 7)
                                destroy perItem
                                destroy rightList
                            bs.setAnimation("Stand")
                            timerTextTag.destr()
                        else
                            timerTextTag.setText((cb.getCount()-1).toString(), 12)

    EventListener.add(EVENT_PLAYER_UNIT_DROP_ITEM) -> 
        let bs = GetTriggerUnit()
        if bs.getTypeId() == BUILDING_TINKER_BLACKSMITH and countedTime != null
            let itemInBs = new LinkedList<item>()
            for int i = 0 to 5
                itemInBs.add(bs.itemInSlot(i))
            itemInBs.forEach() (item t) ->
                if(t == null or t == EventData.getManipulatedItem())
                    itemInBs.remove(t)
            let atSpot = blacksmithThiefList.checkRecipePosition(itemInBs)
            if atSpot == -1
                bs.setAnimation("Stand")
                countedTime.stop()
                timerTextTag.destr()
                destroy countedTime
                countedTime = null