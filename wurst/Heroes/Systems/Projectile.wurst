package Projectile

import ClosureTimers


public interface OnProjectileHit
    function hit(effect detectionUnit, unit target)

public class Projectile
    protected unit target
    protected effect sfx
    protected OnProjectileHit onHit
    protected real velocity

    construct(unit target, effect sfx, real velocity, OnProjectileHit onHit)
        this.target = target
        this.sfx = sfx
        this.onHit = onHit
        this.velocity = velocity
        
    function impact()
        if(target.isAlive())
            onHit.hit(sfx, target)
        sfx.destr()
        destroy this

    function moveForward()
        doPeriodically(0.02) (CallbackPeriodic cb) ->
            let pos1 = sfx.getPos()
            let pos2 = target.getPos()
            let angle = pos1.angleTo(pos2)
            let pos3 = pos1.polarOffset(angle, 7. * velocity)
            sfx..setPos(pos3).setYaw(angle.radians())
            let dist = pos1.distanceTo(pos2)
            if(dist <= 11.)
                impact()
                destroy cb

public function fireProjectile(unit target, effect sfx, real velocity, OnProjectileHit onHit)
    let detection = new Projectile(target, sfx, velocity, onHit)
    detection.moveForward()