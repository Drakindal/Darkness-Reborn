package heroRespawn
import ClosureEvents
import TimerUtils
import Global_Variables
import HashMap

let timeDialogHasher = new HashMap<timer,Respawner>

class Respawner
    timerdialog tdial
    player owner
    
    construct(timerdialog tdial, player owner)
        this.tdial = tdial
        this.owner = owner

    ondestroy
        tdial.destr()

init
    heroRespawn()

function timeDone()
    let time = GetExpiredTimer()
    let respawner = timeDialogHasher.getAndRemove(time)
    time.release()
    playerHero.get(respawner.owner).revive(gg_rct_Base.getCenter(), true)
    destroy respawner

function heroRespawnTimer(unit u)
    let time = getTimer()
    let timeDialog = time.createTimerDialog()
    let respawner = new Respawner(timeDialog, u.getOwner())
    timeDialogHasher.put(time, respawner)
    let p = u.getOwner()
    time.start(10, function timeDone)
    timeDialog.setTitle(p.getName()+": ")
    timeDialog.setTitleColor(PLAYER_COLORS[p.getId()].withAlpha(255))
    timeDialog.display(true)

public function heroRespawn()
    EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
        let u = GetDyingUnit()
        if playerHero.get(u.getOwner()) == u
            heroRespawnTimer(u)
        else if u.isType(UNIT_TYPE_HERO) and not u.isIllusion() and u.getOwner().getId() < 11
            print("Possible error encountered. " + u.getOwner().getNameColored() + "'s hero has died. But, countdown has yet to initiate. Hero was " + u.getName() + ". The hero was supposed to be " + playerHero.get(u.getOwner()).getName())