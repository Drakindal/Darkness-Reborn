package PointTransitProjectile

import ClosureTimers

public interface OnProjectileHit
    function hit(effect detectionUnit, vec2 target, bool inTransit)

public class PointProjectile
    protected vec2 target
    protected effect sfx
    protected OnProjectileHit onHit
    protected real tickCounter
    protected real tickRate

    construct(vec2 target, effect sfx, real tickRate, OnProjectileHit onHit)
        this.target = target
        this.sfx = sfx
        this.onHit = onHit
        this.tickRate = tickRate     

    function impact()
        onHit.hit(sfx, target, false)
        sfx.destr()
        destroy this

    function inTransit()
        onHit.hit(sfx, target, true)

    function moveForward(real velocity)
        var pos1 = sfx.getPos()
        let angle = pos1.angleTo(target)
        doPeriodically(0.02) (CallbackPeriodic cb) ->
            pos1 = sfx.getPos()
            let pos3 = pos1.polarOffset(angle, 7. * velocity)
            sfx..setPos(pos3).setYaw(angle.radians())
            let dist = pos1.distanceTo(target)
            if(dist <= 11.)
                impact()
                destroy cb
            else if tickCounter > tickRate
                tickCounter = tickCounter - tickRate
                inTransit()
            else
                tickCounter = tickCounter + 0.02

    function timedMoveForward(int range, real time)
        var pos1 = sfx.getPos()
        let angle = pos1.angleTo(target)
        let dist = (range * tickRate)/time
        doPeriodicallyTimed(tickRate, time) (CallbackCounted cb) ->
            pos1 = sfx.getPos()
            let distanceTravel = pos1.polarOffset(angle, dist)
            sfx..setPos(distanceTravel).setYaw(angle.radians())
            if(cb.isLast())
                impact()
                destroy cb
            else
                inTransit()

public function firePointTransitProjectile(vec2 target, effect sfx, real velocity, real tickRate, OnProjectileHit onHit)
    let detection = new PointProjectile(target, sfx, tickRate, onHit)
    detection.moveForward(velocity)

public function firePointTransitTimedProjectile(vec2 target, effect sfx, real tickRate, real time, int range, OnProjectileHit onHit)
    let detection = new PointProjectile(target, sfx, tickRate, onHit)
    detection.timedMoveForward(range, time)