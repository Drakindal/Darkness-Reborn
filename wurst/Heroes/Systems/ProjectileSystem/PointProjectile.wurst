package PointProjectile
import ClosureTimers

public interface OnProjectileHit
    function hit(effect detectionUnit, vec2 target)

public class PointProjectile
    protected vec2 target
    protected effect sfx

    construct(vec2 target, effect sfx)
        this.target = target
        this.sfx = sfx
        
    ondestroy
        sfx.destr()

    private function impact(OnProjectileHit onHit)
        onHit.hit(sfx, target)
        destroy this

    function moveForward(real velocity, OnProjectileHit onHit)
        var pos1 = sfx.getPos()
        let angle = pos1.angleTo(target)
        doPeriodically(0.02) (CallbackPeriodic cb) ->
            pos1 = sfx.getPos()
            let pos3 = pos1.polarOffset(angle, 7. * velocity)
            sfx..setPos(pos3).setYaw(angle.radians())
            let dist = pos1.distanceTo(target)
            if(dist <= 11.)
                impact(onHit)
                destroy onHit
                destroy cb

    function timedMoveForward(int range, real time, OnProjectileHit onHit)
        var pos1 = sfx.getPos()
        let angle = pos1.angleTo(target)
        let dist = (range * 0.02)/time
        doPeriodicallyTimed(0.02, time) (CallbackCounted cb) ->
            pos1 = sfx.getPos()
            let distanceTravel = pos1.polarOffset(angle, dist)
            sfx..setPos(distanceTravel).setYaw(angle.radians())
            if(cb.isLast())
                impact(onHit)
                destroy onHit
                destroy cb