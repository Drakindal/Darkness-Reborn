package Projectile

import ClosureTimers


public interface OnProjectileHit
    function hit(effect detectionUnit, unit target)

public class Projectile
    protected unit target
    protected effect sfx
    protected real velocity

    construct(unit target, effect sfx, real velocity)
        this.target = target
        this.sfx = sfx
        this.velocity = velocity

    ondestroy
        sfx.destr()
        
    private function impact(OnProjectileHit onHit)
        if(target.isAlive())
            onHit.hit(sfx, target)
        destroy this

    function moveForward(OnProjectileHit onHit)
        let origPos = sfx.getPos()
        doPeriodically(0.02) (CallbackPeriodic cb) ->
            let pos1 = sfx.getPos()
            let pos2 = target.getPos()
            let angle = pos1.angleTo(pos2)
            let pos3 = pos1.polarOffset(angle, 7. * velocity)
            sfx..setPos(pos3).setYaw(angle.radians())
            let dist = pos1.distanceTo(pos2)
            if(dist <= 11. or origPos.distanceTo(pos2) < origPos.distanceTo(pos1))
                impact(onHit)
                destroy onHit
                destroy cb
            if target.isAlive() != true
                destroy onHit
                destroy this
                destroy cb