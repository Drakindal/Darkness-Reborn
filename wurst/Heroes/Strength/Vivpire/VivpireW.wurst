package VivpireW
import MyAbilityIds
import HashMap
import DummyCaster
import codeDamageTypings
import OrderIds
import ClosureTimers
real array limit = [1.25, 2.5, 3.75, 5, 6.25, 7.5, 8.75, 10, 11.25]
real currentDmg
timer attacked = CreateTimer()

public function bloodHunter(unit src, unit targ)
    /*if(hunterHashMap.has(targ) == false)
        hunterHashMap.put(targ, calculateHuntGain(targ))
    else
        let huntGain = hunterHashMap.get(targ) + calculateHuntGain(targ)
        if(huntGain > limit[src.getAbilityLevel(VIVPIRE_ABIL_2)-1])
            hunterHashMap.put(targ, limit[src.getAbilityLevel(VIVPIRE_ABIL_2)-1])
        else
            hunterHashMap.put(targ, hunterHashMap.get(targ) + calculateHuntGain(targ))
        doAfter(5) -> 
            hunterHashMap.put(targ, hunterHashMap.get(targ) - huntGain)
    new DummyCaster()
    ..owner(GetOwningPlayer(src))
    ..castTarget(VIVPIRE_DUMMYABIL_3, 1, OrderIds.curse, targ)
    ..origin(src.getPos())
    let amount = hunterHashMap.get(targ) * src.getStr(true)
    src.physicalDamageCode(amount, targ, false)*/
    let lvl = src.getAbilityLevel(VIVPIRE_ABIL_2) - 1
    currentDmg = currentDmg + 0.1
    if(currentDmg > limit[lvl])
        currentDmg = limit[lvl]
    let amount = currentDmg * src.getStr(true)
    src.physicalDamageCode(amount, targ, false)
    attacked.start(5, function clearAttacked)

function clearAttacked()
    currentDmg = 0

/*function calculateHuntGain(unit targ) returns real
    if(targ.getHPRatio() > 0.5)
        return 0.1
    else if (targ.getHPRatio() > 0.1)
        return 0.2
    else
        return 0.4*/