package onDamage
import MyUnitIds
// import DamageDetection
import DamageEvent

import A0F0_W
import A0C3_Q
import A0CG_R
import A0CE_T
import A006_Q
import A00P_W
import A0GJ_T
import A0E6_R
import A088_E
import A0DX_R
import A01B_E
import A000_W
import A0S8_E
import A0M3_R
import A01O_P
import A0DI_R
import A0TZ_R

import MyBuffIds
import MyAbilityIds
import ClosureTimers

@configurable constant DETECT_NATIVE_ABILITIES = true

texttag justaposeCrit
unit illidan
int illidanLvl

public int count_A006 = 0

init
    DamageEvent.addListener(0) ->
        switch DamageEvent.getType()
            case ATTACK
                // Illidan (Juxtapose) E
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_17 and DamageEvent.getSource().getAbilityLevel('A0S8') >= 1  
                    if GetRandomInt(1, 100) < DamageEvent.getSource().getAbilityLevel('A0S8')
                        juxtapose(DamageEvent.getSource())

                // Sylvanas (Phantom Arrow) W - Passive
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_18 and DamageEvent.getSource().getAbilityLevel(ABILITY_3) >= 1
                    phantomArrow(DamageEvent.getSource())
                // Shadow Vengeance (Fury Peak) Q - Active
                if UnitHasBuffBJ(DamageEvent.getSource(), 'B00L') and GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_12
                    furyPeak(DamageEvent.getSource(), DamageEvent.getTarget())
                // Shadow Vengeance (Gravitone) R - Passive
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_12 and not UnitHasBuffBJ(DamageEvent.getSource(), 'B00L') and not UnitHasBuffBJ(DamageEvent.getSource(), 'B00J') and GetRandomInt(1, 100) < DamageEvent.getSource().getAbilityLevel('A0CG')*2
                    gravitone(DamageEvent.getSource())
                // Shadow Vengeance (Black Hole) T - Active
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_12 and UnitHasBuffBJ((DamageEvent.getSource()), 'B00J')
                    blackHole(DamageEvent.getSource(), DamageEvent.getTarget())

                // Dark Ranger (Black Arrow) W - Autocast
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_16 and UnitHasBuffBJ(DamageEvent.getTarget(), 'B000') and DamageEvent.getId() != 'A006'
                    darkArrow(DamageEvent.getSource(), DamageEvent.getTarget())

                // Assassin (Last Killer) T - Active
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_10 and UnitHasBuffBJ(DamageEvent.getSource(), 'B00W')
                    lastKiller(DamageEvent.getSource(), DamageEvent.getTarget())

                // Demon Hunter (Demon Power) R - Passive
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_11 and GetUnitAbilityLevel(DamageEvent.getSource(), 'A0E6') >= 1
                    demonPower(DamageEvent.getSource())
                // Death Knight (Curse of Darkness ) E - Passive
                if GetUnitTypeId(DamageEvent.getTarget()) == PLAY_HERO_4 and UnitHasBuffBJ(DamageEvent.getTarget(), 'B004')
                    curseOfDarkness(DamageEvent.getTarget())

                // Mountain King (Over Power) R - Passive
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_0 and UnitHasBuffBJ(DamageEvent.getTarget(), BUFF_5) or UnitHasBuffBJ(DamageEvent.getTarget(), 'BPSE') and DamageEvent.getSource().getAbilityLevel('A0DX') >= 1
                    if GetRandomInt(1, 100) < 35
                        overPower(DamageEvent.getSource(), DamageEvent.getTarget())

                // Tauren Chieftain (Pulverize) E - Passive
                if GetUnitTypeId(DamageEvent.getSource()) == PLAY_HERO_2 and DamageEvent.getSource().getAbilityLevel('A01B') >= 1 and DamageEvent.getDamageType() == DAMAGE_TYPE_NORMAL
                    pulverize(DamageEvent.getSource(), DamageEvent.getTarget())

                // Vashj (Frost Arrows ) X - Autocast
                if DamageEvent.getDamageType() == DAMAGE_TYPE_NORMAL and DamageEvent.getSource().getTypeId() == PLAY_HERO_25 and UnitHasBuffBJ(DamageEvent.getTarget(), 'B002')
                    frostArrows(DamageEvent.getSource())

                // Craggy Hex (Shadow Hunter) R - Passive
                if DamageEvent.getDamageType() == DAMAGE_TYPE_NORMAL and DamageEvent.getTarget().getTypeId() == PLAY_HERO_23 and UnitHasBuffBJ(DamageEvent.getTarget(), 'B00N')
                    craggyHex(DamageEvent.getSource(), DamageEvent.getTarget())

                // Far Seer (Mind Ripper) R - Passive
                if DamageEvent.getDamageType() == DAMAGE_TYPE_NORMAL and DamageEvent.getSource().getTypeId() == PLAY_HERO_22 and DamageEvent.getSource().getAbilityLevel('A0DI') > 0
                    if GetRandomInt(1, 100) < 15
                        mindRipper(DamageEvent.getSource(), DamageEvent.getTarget())

                // Keeper of the Grove (Thorns) R - Passive
                if DamageEvent.getTarget().getTypeId() == PLAY_HERO_20 and DamageEvent.getTarget().getAbilityLevel('A0TZ') > 0
                    thornRoot(DamageEvent.getTarget(), DamageEvent.getSource())

            case SPELL
                // Dark Ranger (Image Arrows) Q - Active
                if GetUnitTypeId(DamageEvent.getSource()) == DUMMY_UNIT_1 and count_A006 < 6
                    trig_TakeRange_Actions(DamageEvent.getTarget())
                    count_A006 = count_A006 + 1
                    doAfter(5) -> 
                        count_A006 = 0    

                
            case CODE
                // Fire Lord (Blaze)
                if DamageEvent.getId() == 'A01P' or DamageEvent.getId() == 'AO1T' or DamageEvent.getId() == 'A01U' or DamageEvent.getId() == 'A01S'
                    blaze(DamageEvent.getSource(), DamageEvent.getTarget())


            default